{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Comment Plugin",
  "home_page_url": "https://vuepress-theme-hope.github.io/comment/",
  "feed_url": "https://vuepress-theme-hope.github.io/comment/feed.json",
  "description": "Comment Plugin for VuePress",
  "author": {
    "name": "Mr.Hope"
  },
  "items": [
    {
      "title": "API Config",
      "url": "https://vuepress-theme-hope.github.io/comment/config/",
      "id": "https://vuepress-theme-hope.github.io/comment/config/",
      "content_html": "<h2 id=\"baselang\"> baseLang</h2>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>'en-US'</code></li>\n</ul>\n<p>The language of the home directory.</p>\n<h2 id=\"type\"> type</h2>\n<ul>\n<li>Type: <code>'valine' | 'vssue' | 'disable'</code></li>\n<li>Required: true</li>\n</ul>\n<p>Comment service provider.</p>\n<p>Setting it to <code>'disable'</code> will disable the comment feature while still enabling PageInfo feature.</p>\n<h2 id=\"author\"> author</h2>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Required: false</li>\n</ul>\n<p>Default author for pages</p>\n<h2 id=\"pageinfo\"> pageInfo</h2>\n<ul>\n<li>Type: <code>string[] | false</code></li>\n<li>Default: <code>['Author', 'Visitor', 'Time', 'Category', 'Tag', 'ReadTime']</code></li>\n</ul>\n<p>The order of the items decides the display order . Fill in <code>false</code> to disable it.</p>\n<p>Available items:</p>\n<ul>\n<li><code>'Author'</code>: Author</li>\n<li><code>'Time'</code>: Writing Date</li>\n<li><code>'Category'</code>: Category</li>\n<li><code>'Tag'</code>: Tags</li>\n<li><code>'ReadTime'</code>: Expect reading time</li>\n<li><code>'Word'</code>: Word number for the article</li>\n<li><code>'Visitor'</code>: Visitor Number</li>\n</ul>\n<h2 id=\"comment\"> comment</h2>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>true</code></li>\n</ul>\n<p>Whether to enable comment feature by default.</p>\n<h2 id=\"wordperminute\"> wordPerminute</h2>\n<ul>\n<li>Type: <code>number</code></li>\n<li>Default: <code>300</code></li>\n</ul>\n<p>Reading words per minute.</p>\n<h2 id=\"valine-config\"> Valine config</h2>\n<ul>\n<li><a href=\"./valine.html\">See here</a></li>\n</ul>\n<h2 id=\"vssue-config\"> Vssue config</h2>\n<ul>\n<li><a href=\"./vssue.html\">See here</a></li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Valine Config",
      "url": "https://vuepress-theme-hope.github.io/comment/config/valine/",
      "id": "https://vuepress-theme-hope.github.io/comment/config/valine/",
      "content_html": "<h1 id=\"valine-config\"> Valine Config</h1>\n<h2 id=\"appid\"> appId</h2>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Required: true</li>\n</ul>\n<p>Fill in the application appId in LeanCloud</p>\n<h2 id=\"appkey\"> appKey</h2>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Required: true</li>\n</ul>\n<p>Fill in the application appKey in LeanCloud</p>\n<h2 id=\"commet\"> commet</h2>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>true</code></li>\n</ul>\n<p>Comment Function</p>\n<h2 id=\"visitor\"> visitor</h2>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>true</code></li>\n</ul>\n<p>Pageviews Function</p>\n<h2 id=\"pagesize\"> pageSize</h2>\n<ul>\n<li>Type: <code>Number</code></li>\n<li>Default: <code>10</code></li>\n</ul>\n<p>Number of comment per page</p>\n<h2 id=\"recordip\"> recordIP</h2>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>Whether to record the commenter IP</p>\n<h2 id=\"more-config-about-valine\"> More Config about valine</h2>\n<ul>\n<li>\n<p><strong>placeholder</strong></p>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>'请留言'</code></li>\n</ul>\n<p>Comment placeholder</p>\n</li>\n<li>\n<p><strong>meta</strong></p>\n<ul>\n<li>Type: <code>string[]</code></li>\n<li>Default: <code>['nick','mail','link']</code></li>\n</ul>\n<p>Commenter’s info</p>\n</li>\n<li>\n<p><strong>requiredFields</strong></p>\n<ul>\n<li>Type: <code>string []</code></li>\n<li>Default value: <code>['nick']</code></li>\n</ul>\n<p>Set required fields</p>\n</li>\n<li>\n<p><strong>enableQQ</strong></p>\n<ul>\n<li>Type: <code>boolean</code></li>\n<li>Default value: <code>true</code></li>\n</ul>\n<p>Whether automatically get QQ nickname and QQ avatar when detecting QQ number in nickname box</p>\n</li>\n<li>\n<p><strong>avatar</strong></p>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Default: <code>'retro'</code></li>\n</ul>\n<p>Gravatar avatar display method.</p>\n<div><p>Optional Values</p>\n<ul>\n<li><code>''</code>(Empty String): Gravatar Official Pic</li>\n<li><code>mp</code>: Mystery</li>\n<li><code>identicon</code></li>\n<li><code>monsterid</code></li>\n<li><code>wavatar</code></li>\n<li><code>retro</code></li>\n<li><code>robohash</code></li>\n<li><code>hide</code></li>\n</ul>\n<p>See <a href=\"https://valine.js.org/avatar.html\" target=\"_blank\" rel=\"noopener noreferrer\">Valine Avator Config</a> for details.</p>\n<p>You can tell users to set their <a href=\"http://cn.gravatar.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gravatar</a>.</p>\n</div>\n</li>\n<li>\n<p><strong>emojiCDN</strong></p>\n<ul>\n<li>Type: <code>string</code></li>\n<li>Required: No</li>\n</ul>\n<p>To set the emoji package CDN, please see <a href=\"https://valine.js.org/emoji.html\" target=\"_blank\" rel=\"noopener noreferrer\">Valine Custom Emoticon Package</a></p>\n</li>\n<li>\n<p><strong>emojiMaps</strong></p>\n<ul>\n<li>Type: <code>sbject</code></li>\n<li>Default value: <code>null</code></li>\n</ul>\n<p>To set the emoticon package mapping, please see <a href=\"https://valine.js.org/emoji.html\" target=\"_blank\" rel=\"noopener noreferrer\">Valine Custom Emoticon Package</a></p>\n</li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Vssue Options",
      "url": "https://vuepress-theme-hope.github.io/comment/config/vssue/",
      "id": "https://vuepress-theme-hope.github.io/comment/config/vssue/",
      "content_html": "<h1 id=\"vssue-options\"> Vssue Options</h1>\n<h2 id=\"platform\"> platform</h2>\n<p><code>@vssue/vuepress-plugin-vssue</code> will auto resolve the corresponding API package according to the value of <code>platform</code>:</p>\n<ul>\n<li>Platform <code>github</code> - API package <code>@vssue/api-github-v3</code></li>\n<li>Platform <code>github-v4</code> - API package <code>@vssue/api-github-v4</code></li>\n<li>Platform <code>gitlab</code> - API package <code>@vssue/api-gitlab-v4</code></li>\n<li>Platform <code>bitbucket</code> - API package <code>@vssue/api-bitbucket-v2</code></li>\n<li>Platform <code>gitee</code> - API package <code>@vssue/api-gitee-v5</code></li>\n<li>Platform <code>gitea</code> - API package <code>@vssue/api-gitea-v1</code></li>\n</ul>\n<h2 id=\"owner\"> owner</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The owner’s name of repository to store the issues and comments. Could be the name of a <strong>user</strong> or an organization (<strong>GitHub Organization</strong> / <strong>Gitlab Group</strong> / <strong>Bitbucket Team</strong>).</p>\n<p>Together with <code>repo</code>, Vssue could locate the repository on the platform.</p>\n</li>\n<li>\n<p><strong>Reference</strong>: </p>\n</li>\n</ul>\n<h2 id=\"repo\"> repo</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The name of repository to store the issues and comments.</p>\n<p>Together with <code>owner</code>, Vssue could locate the repository on the platform.</p>\n</li>\n<li>\n<p><strong>Reference</strong>: </p>\n</li>\n</ul>\n<div><p>Tips</p>\n<p>The common pattern of repository’s URL is <code>`${baseURL}/${owner}/${repo}`</code>:</p>\n<ul>\n<li>GitHub: <code>https://github.com/${owner}/${repo}</code></li>\n<li>Gitlab: <code>https://gitlab.com/${owner}/${repo}</code></li>\n<li>Bitbucket: <code>https://bitbucket.org/${owner}/${repo}</code></li>\n<li>Gitee: <code>https://gitee.com/${owner}/${repo}</code></li>\n</ul>\n</div>\n<h2 id=\"clientid\"> clientId</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The <code>client_id</code> introduced in <a href=\"https://tools.ietf.org/html/rfc6749#section-2.3.1\" target=\"_blank\" rel=\"noopener noreferrer\">OAuth2 spec</a>.</p>\n<p>It’s the client identifier that issued by the platform. You will get it after you set up OAuth App.</p>\n<p>Vssue will use it to get user’s access token.</p>\n</li>\n<li>\n<p><strong>Reference</strong>:</p>\n<ul>\n<li><a href=\"./../guide/supported-platforms.html\">Set up OAuth App</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"clientsecret\"> clientSecret</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>undefined</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The <code>client_secret</code> introduced in <a href=\"https://tools.ietf.org/html/rfc6749#section-2.3.1\" target=\"_blank\" rel=\"noopener noreferrer\">OAuth2 spec</a>.</p>\n<p>It’s the client secret that generated by the platform. You will get it after you set up OAuth App.</p>\n<p>When work with some of the platforms, Vssue will use it together with <code>clientId</code> to get user’s access token.</p>\n<div><p>Tips</p>\n<p>Some platforms (for example Bitbucket and GitLab) support <a href=\"https://tools.ietf.org/html/rfc6749#section-4.2\" target=\"_blank\" rel=\"noopener noreferrer\">Implicit Grant</a>, so we don’t need <code>clientSecret</code> for those platforms. Mean while, some platforms (for example GitHub and Gitee) do not support it now, so <code>clientSecret</code> is required for those platforms.</p>\n</div>\n</li>\n<li>\n<p><strong>Reference</strong>:</p>\n<ul>\n<li></li>\n<li></li>\n<li><a href=\"./../guide/supported-platforms.html\">Set up OAuth App</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"baseurl\"> baseURL</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>undefined</code> (according to the platform)</p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>This is the base URL of your platform.</p>\n<p>Default values for supported platforms are:</p>\n<ul>\n<li><code>'https://github.com'</code> for GitHub</li>\n<li><code>'https://gitlab.com'</code> for Gitlab</li>\n<li><code>'https://bitbucket.org'</code> for Bitbucket</li>\n<li><code>'https://gitee.com'</code> for Gitee</li>\n</ul>\n<div><p>Note</p>\n<p>Only when you choose to use <strong>self-hosted</strong> platform should you set this option. (for example <strong>GitLab Community / Enterprise Edition</strong> or <strong>GitHub Enterprise Server</strong>)</p>\n</div>\n</li>\n<li>\n<p><strong>Reference</strong>:</p>\n<ul>\n<li><a href=\"./../guide/github.html\">GitHub OAuth App</a></li>\n<li><a href=\"./../guide/gitlab.html\">GitLab Application</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"state\"> state</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>'Vssue'</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The <code>state</code> element introduced in <a href=\"https://tools.ietf.org/html/rfc6749#section-4.1.1\" target=\"_blank\" rel=\"noopener noreferrer\">OAuth2 spec</a>.</p>\n<p>Vssue will send it with OAuth redirection and check whether matched in callback.</p>\n<p>It’s designed for preventing <a href=\"https://tools.ietf.org/html/rfc6749#section-10.12\" target=\"_blank\" rel=\"noopener noreferrer\">CSRF</a>, but it’s not so useful here as we put everything in a static page, you can ignore it or set it to anything you like.</p>\n</li>\n</ul>\n<h2 id=\"labels\"> labels</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>['Vssue']</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>To set the labels of issues that Vssue uses.</p>\n<p>Vssue will only request those issues with the labels and ignore others. Together with <code>title</code>, <code>labels</code> will help to identify the corresponding issue of Vssue. If you use multiple labels by setting more strings, only issues with all those labels will be requested by Vssue.</p>\n<div><p>Tips</p>\n<p>Bitbucket does not support issue labels for now, so this option will be ignored if you are using Bitbucket.</p>\n<p>GitHub supports emoji in labels’ name, for example <code>[':heart:Vssue', ':mailbox:Comments']</code>.</p>\n</div>\n</li>\n<li>\n<p><strong>Reference</strong>: </p>\n</li>\n</ul>\n<h2 id=\"prefix\"> prefix</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>'[Vssue]'</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The title prefix for issues. Used for generating the actual title of the corresponding issue.</p>\n<p>For example, if the <code>prefix</code> is <code>'[Vssue]'</code> and the <code>title</code> is <code>'Vssue Demo'</code>, the actual title of the corresponding issue is <code>'[Vssue]Vssue Demo'</code>.</p>\n<p>It will be ignored if the type of <code>title</code> is <code>Function</code>.</p>\n</li>\n<li>\n<p><strong>Reference</strong>: </p>\n</li>\n</ul>\n<h2 id=\"admins\"> admins</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string[]</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>[]</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>Array of username that has admin access to Vssue. The <code>owner</code> always has admin access.</p>\n<p>Users with admin access can delete all comments, while other users can only delete their own comments.</p>\n<p>Only <code>admins</code> can auto create corresponding issue if it does not exist.</p>\n<div><p>Tips</p>\n<p>To auto create the issue when the <code>owner</code> is a organization rather than a user, you can add your username into <code>admins</code>.</p>\n</div>\n</li>\n<li>\n<p><strong>Reference</strong>: </p>\n</li>\n</ul>\n<h2 id=\"perpage\"> perPage</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>number</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>10</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The default value of how many comments to show per page.</p>\n</li>\n</ul>\n<h2 id=\"locale\"> locale</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>undefined</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The locale language.</p>\n<p>If not set, Vssue will use one of <code>window.navigator.languages</code>, or fallback to <code>'en'</code>.</p>\n<div><p>Tips</p>\n<p>Vssue uses <a href=\"https://kazupon.github.io/vue-i18n/\" target=\"_blank\" rel=\"noopener noreferrer\">vue-i18n</a> for i18n, but it will not affect other parts of your Vue App.\nAnd if you already have vue-i18n in your project, it will not affect Vssue.</p>\n<p>Language packages locate in <a href=\"https://github.com/meteorlxy/vssue/tree/master/packages/vssue/src/i18n/langs\" target=\"_blank\" rel=\"noopener noreferrer\">src/i18n/langs</a> directory. We have supported:</p>\n<ul>\n<li><code>'en'</code> (<code>'en-US'</code>)</li>\n<li><code>'zh'</code> (<code>'zh-CN'</code>)</li>\n<li><code>'pt'</code> (<code>'pt-BR'</code>)</li>\n<li><code>'ja'</code> (<code>'ja-JP'</code>)</li>\n</ul>\n<p>Contributions welcome for more languages support.</p>\n</div>\n</li>\n</ul>\n<h2 id=\"proxy\"> proxy</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>string | ((url: string) =&gt; string)</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>url =&gt; `https://cors-anywhere.herokuapp.com/${url}`</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>Some platforms (for example GitHub and Gitee) do not support Implicit Grant, so we have to request the API of the platform to get the access token.</p>\n<p>However, the access token API of the platforms do not support CORS (see <a href=\"https://github.com/isaacs/github/issues/330\" target=\"_blank\" rel=\"noopener noreferrer\">related issue of GitHub</a>). As Vssue is a pure frontend plugin, we have to use a proxy to request access token.</p>\n<p>By default, we use an open source CORS proxy service <a href=\"https://github.com/Rob--W/cors-anywhere\" target=\"_blank\" rel=\"noopener noreferrer\">cors-anywhere</a> for that.</p>\n<p>To use your own proxy, you need to set this option.</p>\n<p>If the platform you use does not require <code>clientSecret</code>, this option will be ignored.</p>\n</li>\n<li>\n<p><strong>Example</strong>:</p>\n<div><pre><code><span>proxy</span><span>:</span> <span>(</span><span>url</span><span>)</span> <span>=></span> <span><span>`</span><span>https://your.cors.porxy?target=</span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>;</span>\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p><strong>Reference</strong>:</p>\n<ul>\n<li></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"issuecontent\"> issueContent</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>((param: { options: Vssue.Options, url: string }) =&gt; string | Promise&lt;string&gt;)</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>({ url }) =&gt; url</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>The content of issue that auto created by Vssue.</p>\n<p>Vssue will use the return value of the function as the content.</p>\n<p>The parameter includes two properties:</p>\n<ul>\n<li><code>options</code> is the options of Vssue.</li>\n<li><code>url</code> is the URL of current page.</li>\n</ul>\n</li>\n<li>\n<p><strong>Example</strong>:</p>\n<div><pre><code><span>issueContent</span><span>:</span> <span>(</span><span><span>{</span> url <span>}</span></span><span>)</span> <span>=></span>\n  <span><span>`</span><span>This issue is auto created by Vssue to store comments of this page: </span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><div><p>Tips</p>\n<p>The <code>issueContent</code> option is only used to auto create the corresponding issue when it does not exist.</p>\n<p>If the issue already exists, Vssue will not try to update the content.</p>\n</div>\n</li>\n</ul>\n<h2 id=\"autocreateissue\"> autoCreateIssue</h2>\n<ul>\n<li>\n<p><strong>Type</strong>: <code>boolean</code></p>\n</li>\n<li>\n<p><strong>Default</strong>: <code>false</code></p>\n</li>\n<li>\n<p><strong>Details</strong>:</p>\n<p>If <code>autoCreateIssue</code> is set to <code>true</code>, Vssue will try to create an issue automatically when the corresponding issue does not exist. Notice that if you have not logged-in, Vssue will redirect to the authorization page automatically.</p>\n<p>If <code>autoCreateIssue</code> is set to <code>false</code>, you need to create the issue manually.</p>\n</li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "BitBucket OAuth Consumer",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/bitbucket/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/bitbucket/",
      "content_html": "<h1 id=\"bitbucket-oauth-consumer\"> BitBucket OAuth Consumer</h1>\n<h2 id=\"create-a-new-oauth-consumer\"> Create a new OAuth Consumer</h2>\n<ul>\n<li>Go to <strong>Bitbucket settings - OAuth</strong></li>\n<li>Click <strong>Add consumer</strong></li>\n</ul>\n<p><img src=\"./assets/oauth-app-bitbucket-01.png\" alt=\"Set up OAuth App - Bitbucket 01\">\n<img src=\"./assets/oauth-app-bitbucket-02.png\" alt=\"Set up OAuth App - Bitbucket 02\">\n<img src=\"./assets/oauth-app-bitbucket-03.png\" alt=\"Set up OAuth App - Bitbucket 03\"></p>\n<ul>\n<li>Set the <code>Callback URL</code> to your site URL (Here we take <code>localhost:8080</code> for example)</li>\n<li>Unselect <code>This is a private consumer</code></li>\n<li>Select <code>Account - Read</code> and <code>Issues - Write</code> permissions</li>\n</ul>\n<p><img src=\"./assets/oauth-app-bitbucket-04.png\" alt=\"Set up OAuth App - Bitbucket 04\">\n<img src=\"./assets/oauth-app-bitbucket-05.png\" alt=\"Set up OAuth App - Bitbucket 05\"></p>\n<h2 id=\"get-the-client-id\"> Get the Client ID</h2>\n<p>Then you’ve created a new OAuth Consumer, and here is your <strong>Key</strong> (<code>Client ID</code>).</p>\n<p><img src=\"./assets/oauth-app-bitbucket-06.png\" alt=\"Set up OAuth App - Bitbucket 06\"></p>\n<h2 id=\"config-and-start-your-vssue\"> Config and start your Vssue</h2>\n<p>Copy the <code>Client ID</code>, and set <code>owner</code> and <code>repo</code>.</p>\n<blockquote>\n<p>The URL pattern of bitbucket repo is <code>https://bitbucket.org/${owner}/${repo}</code></p>\n</blockquote>\n<p>Here we take <code>https://bitbucket.org/meteorlxy/vssue-demo</code> for example, and set the <code>title</code> of issue to <code>Vssue Demo</code>.</p>\n<p>Then run <code>anywhere -h localhost 8080</code> to serve the <code>index.html</code> on <code>localhost:8080</code>.</p>\n<p><img src=\"./assets/oauth-app-bitbucket-07.png\" alt=\"Set up OAuth App - Bitbucket 07\"></p>\n<h2 id=\"try-out-vssue-locally\"> Try out Vssue locally</h2>\n<p>Vssue has already run here. Click <code>Login</code> to login with Bitbucket account.</p>\n<p><img src=\"./assets/oauth-app-bitbucket-08.png\" alt=\"Set up OAuth App - Bitbucket 08\"></p>\n<p>Redirect to Bitbucket Authorization page. Click <code>Grant access</code> to login.</p>\n<p><img src=\"./assets/oauth-app-bitbucket-09.png\" alt=\"Set up OAuth App - Bitbucket 09\">\n<img src=\"./assets/oauth-app-bitbucket-10.png\" alt=\"Set up OAuth App - Bitbucket 10\"></p>\n<p>Oops, failed to load comments. Your repository should enable the <strong>Issue Tracker</strong> to make Vssue works.</p>\n<p><img src=\"./assets/oauth-app-bitbucket-11.png\" alt=\"Set up OAuth App - Bitbucket 11\"></p>\n<p>Leave a comment on this page ~</p>\n<p><img src=\"./assets/oauth-app-bitbucket-12.png\" alt=\"Set up OAuth App - Bitbucket 12\">\n<img src=\"./assets/oauth-app-bitbucket-13.png\" alt=\"Set up OAuth App - Bitbucket 13\"></p>\n<div><p>Tips</p>\n<p>You can go to the repository <a href=\"https://bitbucket.org/meteorlxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteorlxy/vssue-demo</a> to get the demo code. Check the <a href=\"https://bitbucket.org/meteorlxy/vssue-demo/issues/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1 issue</a> of that repository to see what happened.</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Gitee Third Party Application",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/gitee/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/gitee/",
      "content_html": "<h1 id=\"gitee-third-party-application\"> Gitee Third Party Application</h1>\n<blockquote>\n<p>Vssue can also work with self-hosted Gitee Enterprise Version. Set the <code>baseURL</code> options to your Gitee URL.</p>\n<p>Gitee requires <code>clientSecret</code> because Gitee does not support implicit grant type</p>\n</blockquote>\n<h2 id=\"create-a-new-third-party-application\"> Create a new Third Party Application</h2>\n<ul>\n<li>Go to <a href=\"https://gitee.com/oauth/applications\" target=\"_blank\" rel=\"noopener noreferrer\">Settings - Third Party Application</a></li>\n<li>Click <a href=\"https://gitee.com/oauth/applications/new\" target=\"_blank\" rel=\"noopener noreferrer\">Create Application</a></li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitee-01.png\" alt=\"Set up OAuth App - Gitee 01\">\n<img src=\"./assets/oauth-app-gitee-02.png\" alt=\"Set up OAuth App - Gitee 02\"></p>\n<ul>\n<li>Set the <code>Homepage URL</code> and <code>Authorization callback URL</code> to your site URL (Here we take <code>localhost:8080</code> for example)</li>\n<li>Select <code>issues</code> and <code>notes</code> permissions</li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitee-03.png\" alt=\"Set up OAuth App - Gitee 03\"></p>\n<h2 id=\"get-the-client-id-and-secret\"> Get the Client ID and Secret</h2>\n<p>Then you’ve created a new Third Party Application, and here is your <code>Client ID</code> and <code>Client Secret</code>.</p>\n<p><img src=\"./assets/oauth-app-gitee-04.png\" alt=\"Set up OAuth App - Gitee 04\"></p>\n<h2 id=\"config-and-start-your-vssue\"> Config and start your Vssue</h2>\n<p>Copy the <code>Client ID</code> and <code>Client Secret</code>, and set <code>owner</code> and <code>repo</code>.</p>\n<blockquote>\n<p>The URL pattern of gitee repo is <code>https://gitee.com/${owner}/${repo}</code></p>\n</blockquote>\n<p>Here we take <code>https://gitee.com/meteor_lxy/vssue-demo</code> for example, and set the <code>title</code> of issue to <code>Vssue Demo</code>.</p>\n<p>Then run <code>anywhere -h localhost 8080</code> to serve the <code>index.html</code> on <code>localhost:8080</code>.</p>\n<p><img src=\"./assets/oauth-app-gitee-05.png\" alt=\"Set up OAuth App - Gitee 05\"></p>\n<h2 id=\"try-out-vssue-locally\"> Try out Vssue locally</h2>\n<p>Vssue has already run here. Click <code>Login</code> to login with gitee account and <code>click to create issue</code>.</p>\n<p><img src=\"./assets/oauth-app-gitee-06.png\" alt=\"Set up OAuth App - Gitee 06\"></p>\n<p>Redirect to Gitee Authorization page. Click <code>Authorize</code> to login.</p>\n<p><img src=\"./assets/oauth-app-gitee-07.png\" alt=\"Set up OAuth App - Gitee 07\"></p>\n<p>Leave a comment on this page ~</p>\n<p><img src=\"./assets/oauth-app-gitee-08.png\" alt=\"Set up OAuth App - Gitee 08\"></p>\n<p><img src=\"./assets/oauth-app-gitee-09.png\" alt=\"Set up OAuth App - Gitee 09\"></p>\n<div><p>Tips</p>\n<p>You can go to the repository <a href=\"https://gitee.com/meteor_lxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteor_lxy/vssue-demo</a> to get the demo code. Check the <a href=\"https://gitee.com/meteor_lxy/vssue-demo/issues/IWWTA\" target=\"_blank\" rel=\"noopener noreferrer\">first issue</a> of that repository to see what happened.</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "GitHub OAuth App",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/github/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/github/",
      "content_html": "<h1 id=\"github-oauth-app\"> GitHub OAuth App</h1>\n<blockquote>\n<p>Vssue can also work with self-hosted GitHub Enterprise Server. Set the <code>baseURL</code> options to your GitHub URL. See <a href=\"./../options/#baseurl\">Options Reference - baseURL</a></p>\n<p>GitHub requires <code>clientSecret</code> because <a href=\"https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub does not support implicit grant type</a></p>\n<p><img src=\"./assets/oauth-app-github-00.png\" alt=\"Set up OAuth App - GitHub 00\"></p>\n</blockquote>\n<h2 id=\"create-a-new-oauth-app\"> Create a new OAuth App</h2>\n<ul>\n<li>Go to <a href=\"https://github.com/settings/developers\" target=\"_blank\" rel=\"noopener noreferrer\">Settings - Developer Settings - OAuth Apps</a></li>\n<li>Click <a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener noreferrer\">New OAuth App</a></li>\n</ul>\n<p><img src=\"./assets/oauth-app-github-01.png\" alt=\"Set up OAuth App - GitHub 01\">\n<img src=\"./assets/oauth-app-github-02.png\" alt=\"Set up OAuth App - GitHub 02\">\n<img src=\"./assets/oauth-app-github-03.png\" alt=\"Set up OAuth App - GitHub 03\"></p>\n<ul>\n<li>Set the <code>Homepage URL</code> and <code>Authorization callback URL</code> to your site URL (Here we take <code>localhost:8080</code> for example)</li>\n</ul>\n<p><img src=\"./assets/oauth-app-github-04.png\" alt=\"Set up OAuth App - GitHub 04\"></p>\n<h2 id=\"get-the-client-id-and-secret\"> Get the Client ID and Secret</h2>\n<p>Then you’ve created a new OAuth App, and here is your <code>Client ID</code> and <code>Client Secret</code>.</p>\n<p><img src=\"./assets/oauth-app-github-05.png\" alt=\"Set up OAuth App - GitHub 05\"></p>\n<h2 id=\"config-and-start-your-vssue\"> Config and start your Vssue</h2>\n<p>Copy the <code>Client ID</code> and <code>Client Secret</code>, and set <code>owner</code> and <code>repo</code>.</p>\n<blockquote>\n<p>The URL pattern of github repo is <code>https://github.com/${owner}/${repo}</code></p>\n</blockquote>\n<p>Here we take <code>https://github.com/meteorlxy/vssue-demo</code> for example, and set the <code>title</code> of issue to <code>Vssue Demo</code>.</p>\n<p>Then run <code>anywhere -h localhost 8080</code> to serve the <code>index.html</code> on <code>localhost:8080</code>.</p>\n<p><img src=\"./assets/oauth-app-github-06.png\" alt=\"Set up OAuth App - GitHub 06\"></p>\n<h2 id=\"try-out-vssue-locally\"> Try out Vssue locally</h2>\n<p>Vssue has already run here. Click <code>Login</code> to login with GitHub account.</p>\n<p><img src=\"./assets/oauth-app-github-07.png\" alt=\"Set up OAuth App - GitHub 07\"></p>\n<p>Redirect to GitHub Authorization page. Click <code>Authorize ${your account}</code> to login.</p>\n<p><img src=\"./assets/oauth-app-github-08.png\" alt=\"Set up OAuth App - GitHub 08\"></p>\n<p>Leave a comment on this page ~</p>\n<p><img src=\"./assets/oauth-app-github-09.png\" alt=\"Set up OAuth App - GitHub 09\"></p>\n<p><img src=\"./assets/oauth-app-github-10.png\" alt=\"Set up OAuth App - GitHub 10\"></p>\n<div><p>Tips</p>\n<p>You can go to the repository <a href=\"https://github.com/meteorlxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteorlxy/vssue-demo</a> to get the demo code. Check the <a href=\"https://github.com/meteorlxy/vssue-demo/issues/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1 issue</a> of that repository to see what happened.</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "GitLab Application",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/gitlab/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/gitlab/",
      "content_html": "<h1 id=\"gitlab-application\"> GitLab Application</h1>\n<blockquote>\n<p>See <a href=\"https://docs.gitlab.com/ce/integration/oauth_provider.html#adding-an-application-through-the-profile\" target=\"_blank\" rel=\"noopener noreferrer\">Gitlab official docs</a> for reference.\nVssue can also work with self-hosted GitLab. Set the <code>baseURL</code> options to your Gitlab URL. See <a href=\"./../options/#baseurl\">Options Reference - baseURL</a></p>\n</blockquote>\n<h2 id=\"create-a-new-application\"> Create a new Application</h2>\n<ul>\n<li>Go to <a href=\"https://gitlab.com/profile/applications\" target=\"_blank\" rel=\"noopener noreferrer\">Settings - Applications</a></li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitlab-01.png\" alt=\"Set up OAuth App - Gitlab 01\">\n<img src=\"./assets/oauth-app-gitlab-02.png\" alt=\"Set up OAuth App - Gitlab 02\"></p>\n<ul>\n<li>Set the <code>Redirect URI</code> to your site URL (Here we take <code>localhost:8080</code> for example)</li>\n<li>Select <code>api</code> scope</li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitlab-03.png\" alt=\"Set up OAuth App - Gitlab 03\"></p>\n<h2 id=\"get-the-client-id\"> Get the Client ID</h2>\n<p>Then you’ve created a new Application, and here is your <strong>Application ID</strong> (<code>Client ID</code>).</p>\n<p><img src=\"./assets/oauth-app-gitlab-04.png\" alt=\"Set up OAuth App - Gitlab 04\"></p>\n<h2 id=\"config-and-start-your-vssue\"> Config and start your Vssue</h2>\n<p>Copy the <code>Client ID</code>, and set <code>owner</code> and <code>repo</code>.</p>\n<blockquote>\n<p>The URL pattern of gitlab repo is <code>https://gitlab.com/${owner}/${repo}</code></p>\n</blockquote>\n<p>Here we take <code>https://gitlab.com/meteorlxy/vssue-demo</code> for example, and set the <code>title</code> of issue to <code>Vssue Demo</code>.</p>\n<p>Then run <code>anywhere -h localhost 8080</code> to serve the <code>index.html</code> on <code>localhost:8080</code>.</p>\n<p><img src=\"./assets/oauth-app-gitlab-05.png\" alt=\"Set up OAuth App - Gitlab 05\"></p>\n<h2 id=\"try-out-vssue-locally\"> Try out Vssue locally</h2>\n<p>Vssue has already run here. Click <code>Login</code> to login with Gitlab account.</p>\n<p><img src=\"./assets/oauth-app-gitlab-06.png\" alt=\"Set up OAuth App - Gitlab 06\"></p>\n<p>Redirect to GitLab Authorization page. Click <code>Authorize</code> to login.</p>\n<p><img src=\"./assets/oauth-app-gitlab-07.png\" alt=\"Set up OAuth App - Gitlab 07\"></p>\n<p>Leave a comment on this page ~</p>\n<p><img src=\"./assets/oauth-app-gitlab-08.png\" alt=\"Set up OAuth App - Gitlab 08\">\n<img src=\"./assets/oauth-app-gitlab-09.png\" alt=\"Set up OAuth App - Gitlab 09\"></p>\n<div><p>Tips</p>\n<p>You can go to the repository <a href=\"https://gitlab.com/meteorlxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteorlxy/vssue-demo</a> to get the demo code. Check the <a href=\"https://gitlab.com/meteorlxy/vssue-demo/issues/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1 issue</a> of that repository to see what happened.</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Page information",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/page-info/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/page-info/",
      "content_html": "<p>The <code>&lt;PageInfo /&gt;</code> component is enabled globally by default. You can disable it by setting <code>pageInfo: false</code> in <code>Front Matter</code> of a specific page.</p>\n<p>To keep it globally disabled, please set <code>pageInfo</code> to <code>false</code> in the plugin options. In this way you can set <code>pageInfo</code> in <code>Front Matter</code> of a specific page to enable it locally.</p>\n<h2 id=\"parameters\"> Parameters</h2>\n<p><code>pageInfo</code> accepts an array of strings by default, filling in a group of items. The order of filling is the order in which the items are displayed.</p>\n<p>The optional values ​​and corresponding contents of the entry are as follows:</p>\n<table>\n<thead>\n<tr>\n<th>Entry</th>\n<th>Corresponding content</th>\n<th>page frontmatter value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>'Author'</code></td>\n<td>author</td>\n<td>author</td>\n</tr>\n<tr>\n<td><code>'Time'</code></td>\n<td>Writing Date</td>\n<td>time</td>\n</tr>\n<tr>\n<td><code>'Category'</code></td>\n<td>Category</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>'Tag'</code></td>\n<td>tags</td>\n<td>tags</td>\n</tr>\n<tr>\n<td><code>'ReadTime'</code></td>\n<td>Estimated reading time</td>\n<td>N / A (automatically generated)</td>\n</tr>\n<tr>\n<td><code>'Word'</code></td>\n<td>Word count</td>\n<td>N / A (automatically generated)</td>\n</tr>\n<tr>\n<td><code>'Visitor'</code></td>\n<td>Visits</td>\n<td>visitor (only Valine is available)</td>\n</tr>\n</tbody>\n</table>\n<p>By default it will display &quot;Author, Visit Number, Writing Date, Category, Tags, Expect Reading Time&quot;.</p>\n<div><p>Other notes</p>\n<ul>\n<li><strong>author</strong></li>\n</ul>\n<p>You can configure <code>author</code> in the plugin options to set the default author. And you can also configure <code>author</code> in frontmatter with a new value in the page to override the default author, or set it to <code>false</code> to cancel the author display.</p>\n<ul>\n<li><strong>time</strong></li>\n</ul>\n<p>It is recommended to fill it with a standard date format. A standard format is in the form of <code>xxxx-xx-xx</code>, such as &quot;April 1, 2020&quot; should be written as <code>2020-04-01</code>.</p>\n<ul>\n<li><strong>Reading time</strong></li>\n</ul>\n<p>The default statistic method is 300 words per minute. You can override it by setting <code>wordPerminute</code> in the plugin configuration. This option does not support individual configuration on the page.</p>\n</div>\n<h2 id=\"original-logo\"> Original logo</h2>\n<p>You can set <code>original</code> to <code>true</code> in the frontmatter of a specific page to add original tags to your articles.</p>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Guide",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/",
      "content_html": "<h1 id=\"guide\"> Guide</h1>\n<p>This plugin exposes two components at <code>@mr-hope/vuepress-plugin-comment/&lt;component name&gt;.vue</code>. Please include it manually in your theme.</p>\n<ul>\n<li><code>&lt;Comment /&gt;</code>: Comment component</li>\n<li><code>&lt;PageInfo /&gt;</code>: Page information component</li>\n</ul>\n<h2 id=\"pageinfo\"> <code>&lt;PageInfo /&gt;</code></h2>\n<p>You need to insert the page information component (<code>&lt;PageInfo /&gt;</code>) before the <code>&lt;Content /&gt;</code> component.</p>\n<ul>\n<li><a href=\"./page-info.html\">View Details</a></li>\n</ul>\n<h2 id=\"comment\"> <code>&lt;Comment /&gt;</code></h2>\n<p>It is recommended to insert the comment component (<code>&lt;Comment /&gt;</code>) after the <code>&lt;PageNav /&gt;</code> component.</p>\n<p><code>&lt;Comment /&gt;</code> components are enabled globally by default. You can disable it by setting <code>comment: false</code> in <code>Front Matter</code> on a specific page.</p>\n<p>To keep it globally disabled, please set <code>comment</code> to <code>false</code> in the plugin options. This way you can set <code>comment: true</code> in the frontmatter of a particular page to enable it locally.</p>\n<p>You can choose from 2 comment service provider: Valine and Vssue.</p>\n<h3 id=\"valine\"> Valine</h3>\n<p>See <a href=\"./valine.html\">Valine Config Guide</a></p>\n<h3 id=\"vssue\"> Vssue</h3>\n<p>See <a href=\"./vssue.html\">Vssue Config Guide</a></p>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Supported Platforms",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/supported-platforms/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/supported-platforms/",
      "content_html": "<h1 id=\"supported-platforms\"> Supported Platforms</h1>\n<h2 id=\"github\"> GitHub</h2>\n<p>Guide: <a href=\"./github.html\">Set up GitHub OAuth App</a></p>\n<h3 id=\"github-rest-api-v3\"> GitHub REST API V3</h3>\n<ul>\n<li>Vssue API package: <a href=\"https://www.npmjs.com/package/@vssue/api-github-v3\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-github-v3</a></li>\n<li>Features or drawbacks:\n<ul>\n<li><a href=\"./../options/#clientsecret\">clientSecret</a> is required</li>\n<li>Comments not sortable</li>\n<li>Comments editable</li>\n<li>Comments deletable</li>\n<li>Can view comments without login, but has API rate limitation</li>\n</ul>\n</li>\n<li>Developer Reference: <a href=\"https://developer.github.com/v3\" target=\"_blank\" rel=\"noopener noreferrer\">Official Docs</a></li>\n</ul>\n<h3 id=\"github-graphql-api-v4\"> GitHub GraphQL API V4</h3>\n<ul>\n<li>Vssue API package: <a href=\"https://www.npmjs.com/package/@vssue/api-github-v4\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-github-v4</a></li>\n<li>Features or drawbacks:\n<ul>\n<li><a href=\"./../options/#clientsecret\">clientSecret</a> is required</li>\n<li>Comments sortable</li>\n<li>Comments editable</li>\n<li>Comments deletable</li>\n<li>Requires login to view comments</li>\n</ul>\n</li>\n<li>Developer Reference: <a href=\"https://developer.github.com/v4\" target=\"_blank\" rel=\"noopener noreferrer\">Official Docs</a></li>\n</ul>\n<h2 id=\"gitlab\"> GitLab</h2>\n<p>Guide: <a href=\"./gitlab.html\">Set up GitLab Application</a></p>\n<h3 id=\"gitlab-api-v4-gitlab-v11-0\"> Gitlab API V4 (Gitlab v11.0+)</h3>\n<ul>\n<li>Vssue API package: <a href=\"https://www.npmjs.com/package/@vssue/api-gitlab-v4\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-gitlab-v4</a></li>\n<li>Features or drawbacks:\n<ul>\n<li>Comments sortable</li>\n<li>Comments editable</li>\n<li>Comments deletable</li>\n<li>Requires login to view comments</li>\n</ul>\n</li>\n<li>Developer Reference: <a href=\"https://docs.gitlab.com/ce/api\" target=\"_blank\" rel=\"noopener noreferrer\">Official Docs</a></li>\n</ul>\n<h2 id=\"bitbucket\"> Bitbucket</h2>\n<p>Guide: <a href=\"./bitbucket.html\">Set up Bitbucket OAuth Consumer</a></p>\n<h3 id=\"bitbucket-api-v2\"> Bitbucket API V2</h3>\n<ul>\n<li>Vssue API package: <a href=\"https://www.npmjs.com/package/@vssue/api-bitbucket-v2\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-bitbucket-v2</a></li>\n<li>Features or drawbacks:\n<ul>\n<li>Comments sortable</li>\n<li>Comments editable</li>\n<li>Comments deletable</li>\n<li>Can view comments without login</li>\n<li>Cannot post emoji reactions to comments (heart, like, unlike, etc.)</li>\n</ul>\n</li>\n<li>Developer Reference: <a href=\"https://developer.atlassian.com/bitbucket/api/2/reference\" target=\"_blank\" rel=\"noopener noreferrer\">Official Docs</a></li>\n</ul>\n<h2 id=\"gitee\"> Gitee</h2>\n<p>Guide: <a href=\"./gitee.html\">Set up Gitee OAuth Application</a></p>\n<h3 id=\"gitee-api-v5\"> Gitee API V5</h3>\n<ul>\n<li>Vssue API package: <a href=\"https://www.npmjs.com/package/@vssue/api-gitee-v5\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-gitee-v5</a></li>\n<li>Features or drawbacks:\n<ul>\n<li><a href=\"./../options/#clientsecret\">clientSecret</a> is required</li>\n<li>Comments not sortable</li>\n<li>Comments editable</li>\n<li>Comments deletable</li>\n<li>Can view comments without login</li>\n<li>Cannot post emoji reactions to comments (heart, like, unlike, etc.)</li>\n</ul>\n</li>\n<li>Developer Reference: <a href=\"https://gitee.com/api/v5/swagger\" target=\"_blank\" rel=\"noopener noreferrer\">Official Docs</a></li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Valine",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/valine/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/valine/",
      "content_html": "<h1 id=\"valine\"> Valine</h1>\n<p>With Valine，this plugin provides you comment and visitors function。</p>\n<h2 id=\"get-app-id-and-app-key\"> Get APP_ID and APP_Key</h2>\n<p><a href=\"https://leancloud.cn/dashboard/login.html#/signup\" target=\"_blank\" rel=\"noopener noreferrer\">Click here</a> to register or login in leancloud.</p>\n<p>Create new application in Leancloud, and you will get APP ID/APP Key.</p>\n<div><pre><code>options <span>=</span> <span>{</span>\n  type<span>:</span> <span>\"valine\"</span><span>,</span>\n  appId<span>:</span> <span>\"...\"</span><span>,</span> <span>// your appId</span>\n  appKey<span>:</span> <span>\"...\"</span><span>,</span> <span>// your appKey</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>You can find all config items on <a href=\"./../api/valine.html\">Config</a>.</p>\n<div><p>Tips</p>\n<p>For Valine config and usage, please see <a href=\"https://valine.js.org\" target=\"_blank\" rel=\"noopener noreferrer\">Valine Docs</a>。</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Using Vssue",
      "url": "https://vuepress-theme-hope.github.io/comment/guide/vssue/",
      "id": "https://vuepress-theme-hope.github.io/comment/guide/vssue/",
      "content_html": "<h1 id=\"using-vssue\"> Using Vssue</h1>\n<h2 id=\"choose-a-platform-to-use\"> Choose a platform to use</h2>\n<p>Vssue can enable comments for your static pages via the <code>Issue System</code> of <code>GitHub</code>, <code>Gitlab</code>, <code>Bitbucket</code> or <code>Gitee</code>, and you can choose one of those platforms.</p>\n<p>Go to <a href=\"./supported-platforms.html\">Supported Platforms - Set up OAuth App</a> for detailed instructions.</p>\n<p>After this step, you will get <code>client id</code> and <code>client secret</code> of your OAuth App, which will be used for Vssue options:</p>\n<ul>\n<li><code>owner</code>: the account / group that owns the repository</li>\n<li><code>repo</code>: the name of the repository to store comments</li>\n<li><code>clientId</code>: the <code>client id</code> of your oauth app</li>\n<li><code>clientSecret</code>: the <code>client secret</code> of your oauth app (only required for some of the platforms)</li>\n</ul>\n<h2 id=\"vssue-config\"> Vssue Config</h2>\n<p>This plugin uses <a href=\"https://www.npmjs.com/package/@vssue/vuepress-plugin-vssue\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/vuepress-plugin-vssue</a> to help use Vssue in VuePress.</p>\n<h3 id=\"use-the-plugin\"> Use the plugin</h3>\n<div><pre><code><span>// .vuepress/config.js</span>\n\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  plugins<span>:</span> <span>{</span>\n    <span>\"@mr-hope/comment\"</span><span>:</span> <span>{</span>\n      type<span>:</span> <span>\"vssue\"</span><span>,</span>\n      <span>// set `platform` rather than `api`</span>\n      platform<span>:</span> <span>\"github\"</span><span>,</span>\n\n      <span>// all other options of Vssue are allowed</span>\n      owner<span>:</span> <span>\"OWNER_OF_REPO\"</span><span>,</span>\n      repo<span>:</span> <span>\"NAME_OF_REPO\"</span><span>,</span>\n      clientId<span>:</span> <span>\"YOUR_CLIENT_ID\"</span><span>,</span>\n      clientSecret<span>:</span> <span>\"YOUR_CLIENT_SECRET\"</span><span>,</span>\n    <span>}</span><span>,</span>\n  <span>}</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><div><p>Tips</p>\n<p>The only difference is that, you should set <code>platform</code> rather than the <code>api</code> package itself.</p>\n<p><code>@vssue/vuepress-plugin-vssue</code> will auto resolve the corresponding API package according to the value of <code>platform</code>:</p>\n<ul>\n<li>Platform <code>github</code> - API package <code>@vssue/api-github-v3</code></li>\n<li>Platform <code>github-v4</code> - API package <code>@vssue/api-github-v4</code></li>\n<li>Platform <code>gitlab</code> - API package <code>@vssue/api-gitlab-v4</code></li>\n<li>Platform <code>bitbucket</code> - API package <code>@vssue/api-bitbucket-v2</code></li>\n<li>Platform <code>gitee</code> - API package <code>@vssue/api-gitee-v5</code></li>\n</ul>\n</div>\n<h3 id=\"use-vssue-component\"> Use Vssue Component</h3>\n<p><code>Vssue</code> has already been registered as a Vue component, and can be used in your VuePress Markdown directly.</p>\n<div><pre><code><span>&lt;!-- README.md --></span>\n\n<span><span>#</span> Vssue Demo</span>\n\n<span><span><span>&lt;</span>Vssue</span> <span>title</span><span><span>=</span><span>\"</span>Vssue Demo<span>\"</span></span> <span>/></span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><p>Tips</p>\n<p>You can go to the repository <a href=\"https://github.com/meteorlxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteorlxy/vssue-demo</a> to get the demo code.</p>\n</div>\n<h2 id=\"custom-style-variables\"> Custom Style Variables</h2>\n<p>With the power of <a href=\"https://vuepress.vuejs.org/config/#palette-styl\" target=\"_blank\" rel=\"noopener noreferrer\">palette.styl</a> of VuePress, you can set the Vssue Style.</p>\n<p>There are some predefined <a href=\"http://stylus-lang.com/docs/variables.html\" target=\"_blank\" rel=\"noopener noreferrer\">Stylus variables</a> of Vssue, and you can check them in <code>vssue/src/styles/_variables.styl</code>:</p>\n<div><pre><code><span>// the main color</span>\n$vssue-theme-color\n\n<span>// the text color (used for common text)</span>\n$vssue-text-color\n\n<span>// the text light color (used for muted text, disabled text, etc)</span>\n$vssue-text-light-color\n\n<span>// the border color</span>\n$vssue-border-color\n\n<span>// the progress color</span>\n$vssue-progress-color\n\n<span>// the font size</span>\n$vssue-font-size\n\n<span>// the font family</span>\n$vssue-font-family\n\n<span>// the mobile breakpoint</span>\n$vssue-breakpoint-mobile\n\n<span>// the text direction (ltr / rtl) (used for RTL languages, e.g. Hebrew)</span>\n$vssue-direction\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><p>For example, Vssue use a &quot;Vue green&quot; (<code>#3eaf7c</code>) as the theme color, which is defined as the default value of variable <code>$vssue-theme-color</code>. You can change the theme color by setting <code>$vssue-theme-color</code> before import <code>vssue/src/styles/index.styl</code>.</p>\n<p>By default, those Vssue variables are set to VuePress variables:</p>\n<div><pre><code><span>// @vssue/vuepress-plugin-vssue/styles/index.styl</span>\n\n<span><span>$vssue-theme-color</span> <span>?=</span> $accentColor</span>\n<span><span>$vssue-text-color</span> <span>?=</span> $textColor</span>\n<span><span>$vssue-border-color</span> <span>?=</span> $borderColor</span>\n<span><span>$vssue-breakpoint-mobile</span> <span>?=</span> $MQMobile</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>Set these variables in your <code>palette.styl</code> to override them:</p>\n<div><pre><code><span>// .vuepress/styles/palette.styl</span>\n\n<span><span>$vssue-theme-color</span> <span>=</span> <span>red</span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id=\"do-not-want-to-use-our-plugin\"> Do not want to use our plugin</h2>\n<p>Vssue has tried to be SSR-friendly, so you can import Vssue directly in VuePress like other vue plugins / components without <code>@vssue/vuepress-plugin-vssue</code> (especially if you have customized the styles of Vssue).</p>\n<p>But we still suggest you to use <code>@vssue/vuepress-plugin-vssue</code> in VuePress, which has already helped you make <code>&lt;Vssue&gt;</code> component client-only to avoid some potential issues.</p>\n<p>If you do not want to use the plugin we provided, you may need to wrap <code>&lt;Vssue&gt;</code> component into <code>&lt;ClientOnly&gt;</code> component to avoid those potential issues, that is :</p>\n<div><pre><code><span><span><span>&lt;</span>ClientOnly</span><span>></span></span>\n  <span><span><span>&lt;</span>Vssue</span> <span>/></span></span>\n<span><span><span>&lt;/</span>ClientOnly</span><span>></span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><blockquote>\n<p>See <a href=\"https://vuepress.vuejs.org/guide/using-vue.html#clientonly\" target=\"_blank\" rel=\"noopener noreferrer\">Built-in Components - ClientOnly</a> of VuePress</p>\n</blockquote>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Home",
      "url": "https://vuepress-theme-hope.github.io/comment/",
      "id": "https://vuepress-theme-hope.github.io/comment/",
      "content_html": "<h2 id=\"install\"> Install</h2>\n<CodeGroup>\n<CodeGroupItem title=\"yarn\">\n<div><pre><code><span>yarn</span> <span>add</span> -D @mr-hope/vuepress-plugin-comment\n</code></pre>\n<div><span>1</span><br></div></div></CodeGroupItem>\n<CodeGroupItem title=\"npm\">\n<div><pre><code><span>npm</span> i -D @mr-hope/vuepress-plugin-comment\n</code></pre>\n<div><span>1</span><br></div></div></CodeGroupItem>\n</CodeGroup>\n<h3 id=\"usage\"> Usage</h3>\n<div><pre><code><span>// .vuepress/config.js</span>\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  plugins<span>:</span> <span>[</span>\n    <span>[</span>\n      <span>\"@mr-hope/comment\"</span><span>,</span>\n      <span>{</span>\n        <span>// your options</span>\n      <span>}</span><span>,</span>\n    <span>]</span><span>,</span>\n  <span>]</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "配置",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/config/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/config/",
      "content_html": "<h2 id=\"baselang\"> baseLang</h2>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>'en-US'</code></li>\n</ul>\n<p>主目录所对应的语言。</p>\n<h2 id=\"type\"> type</h2>\n<ul>\n<li>类型: <code>'valine' | 'vssue' | 'disable'</code></li>\n<li>必填: 是</li>\n</ul>\n<p>使用 Valine 还是 Vssue。设置为 <code>'disabled'</code> 会禁用评论功能，仅提供页面信息功能。</p>\n<h2 id=\"author\"> author</h2>\n<ul>\n<li>类型: <code>string</code></li>\n<li>必填: 否</li>\n</ul>\n<p>文章的默认作者</p>\n<h2 id=\"pageinfo\"> pageInfo</h2>\n<ul>\n<li>类型: <code>string[] | false</code></li>\n<li>默认值: <code>['Author', 'Visitor', 'Time', 'Category', 'Tag', 'ReadTime']</code></li>\n</ul>\n<p>文章信息，可以填入数组，数组的顺序是各条目显示的顺序。填入 <code>false</code> 使其被禁用。</p>\n<p>可以填入的条目如下:</p>\n<ul>\n<li><code>'Author'</code>: 作者</li>\n<li><code>'Time'</code>: 写作日期</li>\n<li><code>'Category'</code>: 分类</li>\n<li><code>'Tag'</code>: 标签</li>\n<li><code>'ReadTime'</code>: 预计阅读时间</li>\n<li><code>'Word'</code>: 字数</li>\n<li><code>'Visitor'</code>: 访问量</li>\n</ul>\n<h2 id=\"comment\"> comment</h2>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认: <code>true</code></li>\n</ul>\n<p>是否默认启用评论功能。</p>\n<h2 id=\"wordperminute\"> wordPerminute</h2>\n<ul>\n<li>类型: <code>number</code></li>\n<li>默认: <code>300</code></li>\n</ul>\n<p>每分钟阅读的字数。</p>\n<h2 id=\"valine-配置\"> Valine 配置</h2>\n<ul>\n<li><a href=\"./valine.html\">点击查看</a></li>\n</ul>\n<h2 id=\"vssue-配置\"> Vssue 配置</h2>\n<ul>\n<li><a href=\"./vssue.html\">点击查看</a></li>\n</ul>\n<h2 id=\"页面配置\"> 页面配置</h2>\n<ul>\n<li><a href=\"./frontmatter.html\">点击查看</a></li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "valine 配置",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/config/valine/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/config/valine/",
      "content_html": "<h1 id=\"valine-配置\"> valine 配置</h1>\n<h2 id=\"appid\"> appId</h2>\n<ul>\n<li>类型: <code>string</code></li>\n<li>必填: 是</li>\n</ul>\n<p>填入 LeanCloud 中应用的 APP ID</p>\n<h2 id=\"appkey\"> appKey</h2>\n<ul>\n<li>类型: <code>string</code></li>\n<li>必填: 是</li>\n</ul>\n<p>填入 LeanCloud 中应用的 APP Key</p>\n<h2 id=\"commet\"> commet</h2>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认值: <code>true</code></li>\n</ul>\n<p>留言功能</p>\n<h2 id=\"visitor\"> visitor</h2>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认值: <code>true</code></li>\n</ul>\n<p>文章访问量统计功能</p>\n<h2 id=\"pagesize\"> pageSize</h2>\n<ul>\n<li>类型: <code>number</code></li>\n<li>默认值: <code>10</code></li>\n</ul>\n<p>评论列表分页，每页条数</p>\n<h2 id=\"recordip\"> recordIP</h2>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认值: <code>false</code></li>\n</ul>\n<p>是否记录评论者 IP</p>\n<h2 id=\"更多-valine-配置项\"> 更多 Valine 配置项</h2>\n<ul>\n<li>\n<p><strong>placeholder</strong></p>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>'请留言'</code></li>\n</ul>\n<p>评论框的 placeholder</p>\n</li>\n<li>\n<p><strong>meta</strong></p>\n<ul>\n<li>类型: <code>string[]</code></li>\n<li>默认值: <code>['nick','mail','link']</code></li>\n</ul>\n</li>\n</ul>\n<p>评论者相关属性</p>\n<ul>\n<li>\n<p><strong>requiredFields</strong></p>\n<ul>\n<li>类型: <code>string[]</code></li>\n<li>默认值: <code>['nick']</code></li>\n</ul>\n</li>\n</ul>\n<p>设置必填项</p>\n<ul>\n<li>\n<p><strong>enableQQ</strong></p>\n<ul>\n<li>类型: <code>boolean</code></li>\n<li>默认值: <code>true</code></li>\n</ul>\n</li>\n</ul>\n<p>是否启用昵称框自动获取 QQ 昵称和 QQ 头像</p>\n<ul>\n<li>\n<p><strong>avatar</strong></p>\n<ul>\n<li>类型: <code>string</code></li>\n<li>默认值: <code>'retro'</code></li>\n</ul>\n<p>Gravatar 头像展示方式。</p>\n<div><p>可选值</p>\n<ul>\n<li>''(空字符串): Gravatar 官方图形</li>\n<li><code>mp</code>: 神秘人(一个灰白头像)</li>\n<li><code>identicon</code>: 抽象几何图形</li>\n<li><code>monsterid</code>: 小怪物</li>\n<li><code>wavatar</code></li>\n<li><code>retro</code></li>\n<li><code>robohash</code></li>\n<li><code>hide</code></li>\n</ul>\n<p>具体相关说明详见 <a href=\"https://valine.js.org/avatar.html\" target=\"_blank\" rel=\"noopener noreferrer\">Valine 头像配置</a></p>\n<p>你可以引导用户到 <a href=\"http://cn.gravatar.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gravatar</a> 去设置自己的头像。</p>\n</div>\n</li>\n<li>\n<p><strong>emojiCDN</strong></p>\n<ul>\n<li>类型: <code>string</code></li>\n<li>必填: 否</li>\n</ul>\n<p>设置表情包 CDN，请参考 <a href=\"https://valine.js.org/emoji.html\" target=\"_blank\" rel=\"noopener noreferrer\">Valine 自定义表情包</a></p>\n</li>\n<li>\n<p><strong>emojiMaps</strong></p>\n<ul>\n<li>类型: <code>Object</code></li>\n<li>默认值: <code>null</code></li>\n</ul>\n<p>设置表情包映射，请参考 <a href=\"https://valine.js.org/emoji.html\" target=\"_blank\" rel=\"noopener noreferrer\">Valine 自定义表情包</a></p>\n</li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Vssue 配置",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/config/vssue/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/config/vssue/",
      "content_html": "<h1 id=\"vssue-配置\"> Vssue 配置</h1>\n<h2 id=\"platform\"> platform</h2>\n<p><code>@vssue/vuepress-plugin-vssue</code> 会自动根据你设置的 <code>platform</code> 为你解析对应的 API 包:</p>\n<ul>\n<li>Platform <code>github</code> - API 包 <code>@vssue/api-github-v3</code></li>\n<li>Platform <code>github-v4</code> - API 包 <code>@vssue/api-github-v4</code></li>\n<li>Platform <code>gitlab</code> - API 包 <code>@vssue/api-gitlab-v4</code></li>\n<li>Platform <code>bitbucket</code> - API 包 <code>@vssue/api-bitbucket-v2</code></li>\n<li>Platform <code>gitee</code> - API 包 <code>@vssue/api-gitee-v5</code></li>\n<li>Platform <code>gitea</code> - API 包 <code>@vssue/api-gitea-v1</code></li>\n</ul>\n<h2 id=\"owner\"> owner</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>用来存储 Issue 和评论的仓库的拥有者的名称。可能是一个用户，也可能是一个组织 (<strong>GitHub Organization</strong> / <strong>Gitlab Group</strong> / <strong>Bitbucket Team</strong>)</p>\n<p>Vssue 将通过 <code>owner</code> 和 <code>repo</code> 在平台上定位这个仓库。</p>\n</li>\n<li>\n<p><strong>参考</strong>: </p>\n</li>\n</ul>\n<h2 id=\"repo\"> repo</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>用来存储 Issue 和评论的仓库的名称。</p>\n<p>Vssue 将通过 <code>owner</code> 和 <code>repo</code> 在平台上定位这个仓库。</p>\n</li>\n<li>\n<p><strong>参考</strong>: </p>\n</li>\n</ul>\n<div><p>Tips</p>\n<p>仓库 URL 的常见模式是 <code>`${baseURL}/${owner}/${repo}`</code>:</p>\n<ul>\n<li>GitHub: <code>https://github.com/${owner}/${repo}</code></li>\n<li>Gitlab: <code>https://gitlab.com/${owner}/${repo}</code></li>\n<li>Bitbucket: <code>https://bitbucket.org/${owner}/${repo}</code></li>\n<li>Gitee: <code>https://gitee.com/${owner}/${repo}</code></li>\n</ul>\n</div>\n<h2 id=\"clientid\"> clientId</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>在 <a href=\"https://tools.ietf.org/html/rfc6749#section-2.3.1\" target=\"_blank\" rel=\"noopener noreferrer\">OAuth2 spec</a> 中介绍的 <code>client_id</code>。</p>\n<p>它是由平台分配的 client 标识符。你在创建 OAuth App 之后就可以得到它。</p>\n<p>Vssue 将使用 <code>clientId</code> 来获取用户的 access token。</p>\n</li>\n<li>\n<p><strong>参考</strong>:</p>\n<ul>\n<li><a href=\"./../guide/supported-platforms.html\">创建 OAuth App</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"clientsecret\"> clientSecret</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>undefined</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>在 <a href=\"https://tools.ietf.org/html/rfc6749#section-2.3.1\" target=\"_blank\" rel=\"noopener noreferrer\">OAuth2 spec</a> 中介绍的 <code>client_secret</code>。</p>\n<p>它是由平台生成的 client 密钥。你在创建 OAuth App 之后就可以得到它。</p>\n<p>在和某些平台一起使用时， Vssue 将使用 <code>clientId</code> 和 <code>clientSecret</code> 来获取用户的 access token。</p>\n<div><p>Tips</p>\n<p>一些平台 (如 Bitbucket 和 GitLab) 支持 <a href=\"https://tools.ietf.org/html/rfc6749#section-4.2\" target=\"_blank\" rel=\"noopener noreferrer\">Implicit Grant</a>，所以在使用这些平台时不需要 <code>clientSecret</code>。</p>\n<p>然而，有一些平台 (如 GitHub 和 Gitee) 不支持它，所以在使用这些平台时 <code>clientSecret</code> 是必须的。</p>\n</div>\n</li>\n<li>\n<p><strong>参考</strong>:</p>\n<ul>\n<li></li>\n<li></li>\n<li><a href=\"./../guide/supported-platforms.html\">创建 OAuth App</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"baseurl\"> baseURL</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>undefined</code> (根据不同平台变化)</p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>平台的 base URL。</p>\n<p>对于我们支持的平台，默认值为:</p>\n<ul>\n<li>GitHub 是 <code>'https://github.com'</code></li>\n<li>Gitlab 是 <code>'https://gitlab.com'</code></li>\n<li>Bitbucket 是<code>'https://bitbucket.org'</code></li>\n<li>Gitee 是<code>'https://gitee.com'</code></li>\n</ul>\n<div><p>注意</p>\n<p>只有在你要使用 <strong>自行搭建的</strong> 平台时才需要设置这个选项。 (比如 <strong>GitLab Community / Enterprise Edition</strong> 或 <strong>GitHub Enterprise Server</strong>)</p>\n</div>\n</li>\n<li>\n<p><strong>参考</strong>:</p>\n<ul>\n<li><a href=\"./../guide/github.html\">GitHub OAuth App</a></li>\n<li><a href=\"./../guide/gitlab.html\">GitLab Application</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"state\"> state</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>'Vssue'</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>在 <a href=\"https://tools.ietf.org/html/rfc6749#section-4.1.1\" target=\"_blank\" rel=\"noopener noreferrer\">OAuth2 spec</a> 中介绍的 <code>state</code>。</p>\n<p>Vssue 将会在重定向到平台认证界面时发送它，并在平台认证返回后检查它是否正确。</p>\n<p>它是被设计用来避免 <a href=\"https://tools.ietf.org/html/rfc6749#section-10.12\" target=\"_blank\" rel=\"noopener noreferrer\">CSRF</a> 的，但是由于我们所有东西都在静态页面上，所以它没有太大作用。忽略这个选项，或者随便设置成什么值都行。</p>\n</li>\n</ul>\n<h2 id=\"labels\"> labels</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string[]</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>['Vssue']</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>用来设置 Vssue 使用的 Issue 的 labels (标签) 。</p>\n<p>Vssue 只会请求拥有对应标签的 Issue，忽略其他的 Issue。Vssue 通过 <code>title</code> 和 <code>labels</code> 来确定用来存储评论的对应 Issue。传入多个字符串可以设置多个标签，只有同时满足这些标签的 Issue 才会被 Vssue 请求。</p>\n<div><p>Tips</p>\n<p>Bitbucket 目前不支持 Issue 标签功能，所以如果你使用 Bitbucket 的话，这个配置将会被忽略。</p>\n<p>GitHub 支持在标签名称中加入 emoji，如 <code>[':heart:Vssue', ':mailbox:Comments']</code>。</p>\n</div>\n</li>\n<li>\n<p><strong>参考</strong>: </p>\n</li>\n</ul>\n<h2 id=\"prefix\"> prefix</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>'[Vssue]'</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>Issue 标题的前缀。用于生成存储评论的对应 Issue 的实际标题。</p>\n<p>举例来说，如果 <code>prefix</code> 是 <code>'[Vssue]'</code>，<code>title</code> 是 <code>'Vssue Demo'</code>，那么 Issue 的实际标题就是 <code>'[Vssue]Vssue Demo'</code>。</p>\n<p>如果 <code>title</code> 的类型是 <code>Function</code>，这个配置将会被忽略。</p>\n</li>\n<li>\n<p><strong>参考</strong>: </p>\n</li>\n</ul>\n<h2 id=\"admins\"> admins</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string[]</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>[]</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>拥有 admin 权限的用户数组。<code>owner</code> 始终视为拥有 admin 权限。</p>\n<p>拥有 admin 权限的用户可以删除所有用户的评论，而其他用户只能删除自己的评论。</p>\n<p>只有 <code>admins</code> 才能在存储评论的 Issue 不存在时自动创建它。</p>\n<div><p>Tips</p>\n<p>在 <code>owner</code> 是一个组织而不是用户时，可以将你的用户名添加进 <code>admins</code> 来自动创建对应 Issue。</p>\n</div>\n</li>\n<li>\n<p><strong>参考</strong>: </p>\n</li>\n</ul>\n<h2 id=\"perpage\"> perPage</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>number</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>10</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>默认每页显示的评论数。</p>\n</li>\n</ul>\n<h2 id=\"locale\"> locale</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>undefined</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>使用的语言。</p>\n<p>不设置该选项时，Vssue 会使用 <code>window.navigator.languages</code> 中的语言，如果其中没有 Vssue 支持的语言则会默认使用 <code>'en'</code>。</p>\n<div><p>Tips</p>\n<p>Vssue 使用 <a href=\"https://kazupon.github.io/vue-i18n/\" target=\"_blank\" rel=\"noopener noreferrer\">vue-i18n</a> 实现国际化，但是并不会影响你的 Vue 应用的其他部分。\n如果你在项目中已经使用了 vue-i18n，也不会对 Vssue 造成影响。</p>\n<p>语言包在 <a href=\"https://github.com/meteorlxy/vssue/tree/master/packages/vssue/src/i18n/langs\" target=\"_blank\" rel=\"noopener noreferrer\">src/i18n/langs</a> 目录下。目前我们支持:</p>\n<ul>\n<li><code>'en'</code> (<code>'en-US'</code>)</li>\n<li><code>'zh'</code> (<code>'zh-CN'</code>)</li>\n<li><code>'pt'</code> (<code>'pt-BR'</code>)</li>\n<li><code>'ja'</code> (<code>'ja-JP'</code>)</li>\n</ul>\n<p>欢迎贡献代码帮助 Vssue 支持更多语言。</p>\n</div>\n</li>\n</ul>\n<h2 id=\"proxy\"> proxy</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>string | ((url: string) =&gt; string)</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>url =&gt; `https://cors-anywhere.herokuapp.com/${url}`</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>某些平台 (如 GitHub 和 Gitee) 不支持 Implicit Grant，所以我们必须通过请求平台的 API 来获取 Access Token。</p>\n<p>然而，平台的 Access Token API 不支持 CORS (详见 <a href=\"https://github.com/isaacs/github/issues/330\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub 的相关 Issue</a>) 。由于 Vssue 是一个纯前端插件，我们必须要通过代理来请求 Access Token。</p>\n<p>默认情况下，我们使用一个开源的 CORS 代理服务 <a href=\"https://github.com/Rob--W/cors-anywhere\" target=\"_blank\" rel=\"noopener noreferrer\">cors-anywhere</a>。</p>\n<p>如果你希望使用自己的代理，就需要设置这个选项。</p>\n<p>如果你使用的平台不需要设置 <code>clientSecret</code>，那么该选项会被忽略。</p>\n</li>\n<li>\n<p><strong>示例</strong>:</p>\n<div><pre><code><span>proxy</span><span>:</span> <span>(</span><span>url</span><span>)</span> <span>=></span> <span><span>`</span><span>https://your.cors.porxy?target=</span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>;</span>\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p><strong>参考</strong>:</p>\n<ul>\n<li></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"issuecontent\"> issueContent</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>((param: { options: Vssue.Options, url: string }) =&gt; string | Promise&lt;string&gt;)</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>({ url }) =&gt; url</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>Vssue 自动创建 Issue 时使用的内容。</p>\n<p>Vssue 将使用该函数的返回值作为 Issue 的内容。</p>\n<p>参数包含两个属性:</p>\n<ul>\n<li><code>options</code> 是 Vssue 的 options。</li>\n<li><code>url</code> 是当前页面的 URL ，是 Vssue 生成 Issue 时默认使用的内容。</li>\n</ul>\n</li>\n<li>\n<p><strong>示例</strong>:</p>\n<div><pre><code><span>issueContent</span><span>:</span> <span>(</span><span><span>{</span> url <span>}</span></span><span>)</span> <span>=></span>\n  <span><span>`</span><span>这个 Issue 由 Vssue 自动创建，用来存储该页面的评论: </span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><div><p>Tips</p>\n<p><code>issueContent</code> 只用来在对应 Issue 不存在时新建 Issue。</p>\n<p>如果对应的 Issue 已经存在，Vssue 不会更新 Issue 的内容。</p>\n</div>\n</li>\n</ul>\n<h2 id=\"autocreateissue\"> autoCreateIssue</h2>\n<ul>\n<li>\n<p><strong>类型</strong>: <code>boolean</code></p>\n</li>\n<li>\n<p><strong>默认值</strong>: <code>false</code></p>\n</li>\n<li>\n<p><strong>详细</strong>:</p>\n<p>如果 <code>autoCreateIssue</code> 设置为 <code>true</code>，在对应的 Issue 不存在时，Vssue 会自动尝试为你创建 Issue。注意，若你当前没有登录，则 Vssue 会自动跳转到平台的认证页面。</p>\n<p>如果 <code>autoCreateIssue</code> 设置为 <code>false</code>，你必须手动创建 Issue。</p>\n</li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "BitBucket OAuth Consumer",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/bitbucket/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/bitbucket/",
      "content_html": "<h1 id=\"bitbucket-oauth-consumer\"> BitBucket OAuth Consumer</h1>\n<h2 id=\"创建一个新的-oauth-consumer\"> 创建一个新的 OAuth Consumer</h2>\n<ul>\n<li>前往 <strong>Bitbucket settings - OAuth</strong></li>\n<li>点击 <strong>Add consumer</strong></li>\n</ul>\n<p><img src=\"./assets/oauth-app-bitbucket-01.png\" alt=\"配置 OAuth App - Bitbucket 01\">\n<img src=\"./assets/oauth-app-bitbucket-02.png\" alt=\"配置 OAuth App - Bitbucket 02\">\n<img src=\"./assets/oauth-app-bitbucket-03.png\" alt=\"配置 OAuth App - Bitbucket 03\"></p>\n<ul>\n<li>将 <code>Callback URL</code> 设置为你的网站 URL (这里我们用 <code>localhost:8080</code> 作为示例)</li>\n<li>取消选择 <code>This is a private consumer</code></li>\n<li>勾选 <code>Account - Read</code> 和 <code>Issues - Write</code> 权限</li>\n</ul>\n<p><img src=\"./assets/oauth-app-bitbucket-04.png\" alt=\"配置 OAuth App - Bitbucket 04\">\n<img src=\"./assets/oauth-app-bitbucket-05.png\" alt=\"配置 OAuth App - Bitbucket 05\"></p>\n<h2 id=\"获取-client-id\"> 获取 Client ID</h2>\n<p>现在你已经创建了一个新的 OAuth Consumer，并得到了相应的 <strong>Key</strong> (<code>Client ID</code>).</p>\n<p><img src=\"./assets/oauth-app-bitbucket-06.png\" alt=\"配置 OAuth App - Bitbucket 06\"></p>\n<h2 id=\"配置并启动你的-vssue\"> 配置并启动你的 Vssue</h2>\n<p>复制 <code>Client ID</code>，并设置 <code>owner</code> 和 <code>repo</code>。</p>\n<blockquote>\n<p>Bitbucket repository 的 URL 模式为 <code>https://bitbucket.org/${owner}/${repo}</code></p>\n</blockquote>\n<p>这里我们以 <code>https://bitbucket.org/meteorlxy/vssue-demo</code> 为例，并把 issue 的 <code>title</code> 设置为 <code>Vssue Demo</code>。</p>\n<p>然后运行 <code>anywhere -h localhost 8080</code>，在 <code>localhost:8080</code> 监听一个 http server 并返回 <code>index.html</code>。</p>\n<p><img src=\"./assets/oauth-app-bitbucket-07.png\" alt=\"配置 OAuth App - Bitbucket 07\"></p>\n<h2 id=\"在本地尝试-vssue\"> 在本地尝试 Vssue</h2>\n<p>Vssue 已经成功运行。点击 <code>Login</code> 使用 Bitbucket 帐号登录。</p>\n<p><img src=\"./assets/oauth-app-bitbucket-08.png\" alt=\"配置 OAuth App - Bitbucket 08\"></p>\n<p>重定向到 Bitbucket 授权页面。点击 <code>Grant access</code> 来登录。</p>\n<p><img src=\"./assets/oauth-app-bitbucket-09.png\" alt=\"配置 OAuth App - Bitbucket 09\">\n<img src=\"./assets/oauth-app-bitbucket-10.png\" alt=\"配置 OAuth App - Bitbucket 10\"></p>\n<p>如果出现加载评论失败，你需要确认你的仓库是否开启了 <strong>Issue Tracker</strong> 功能。</p>\n<p><img src=\"./assets/oauth-app-bitbucket-11.png\" alt=\"配置 OAuth App - Bitbucket 11\"></p>\n<p>在当前页面写下评论吧 ~</p>\n<p><img src=\"./assets/oauth-app-bitbucket-12.png\" alt=\"配置 OAuth App - Bitbucket 12\">\n<img src=\"./assets/oauth-app-bitbucket-13.png\" alt=\"配置 OAuth App - Bitbucket 13\"></p>\n<div><p>Tips</p>\n<p>你可以前往 <a href=\"https://bitbucket.org/meteorlxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteorlxy/vssue-demo</a> 来获取 demo 代码。前往该仓库的 <a href=\"https://bitbucket.org/meteorlxy/vssue-demo/issues/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1 issue</a> 看看发生了什么。</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Gitee 第三方应用",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/gitee/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/gitee/",
      "content_html": "<h1 id=\"gitee-第三方应用\"> Gitee 第三方应用</h1>\n<blockquote>\n<p>Vssue 同样可以配合自己搭建的 Gitee 企业版 使用。只需要将 <code>baseURL</code> 设置为你的 Gitee URL 即可。查看 <a href=\"./../options/#baseurl\">配置参考 - baseURL</a></p>\n<p>Gitee 需要设置 <code>clientSecret</code>，因为 Gitee 目前还不支持 implicit grant type</p>\n</blockquote>\n<h2 id=\"创建一个新的第三方应用\"> 创建一个新的第三方应用</h2>\n<ul>\n<li>前往 <a href=\"https://gitee.com/oauth/applications\" target=\"_blank\" rel=\"noopener noreferrer\">设置 - 第三方应用</a></li>\n<li>点击 <a href=\"https://gitee.com/oauth/applications/new\" target=\"_blank\" rel=\"noopener noreferrer\">创建应用</a></li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitee-01.png\" alt=\"配置 OAuth App - Gitee 01\">\n<img src=\"./assets/oauth-app-gitee-02.png\" alt=\"配置 OAuth App - Gitee 02\"></p>\n<ul>\n<li>将 <code>应用主页</code> 和 <code>应用回调地址</code> 设置为你的网站 URL (这里我们用 <code>localhost:8080</code> 作为示例)</li>\n<li>权限选择 <code>issues</code> 和 <code>notes</code></li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitee-03.png\" alt=\"配置 OAuth App - Gitee 03\"></p>\n<h2 id=\"获取-client-id-和-secret\"> 获取 Client ID 和 Secret</h2>\n<p>现在你已经创建了一个新的第三方应用，并得到了相应的 <code>Client ID</code> 和 <code>Client Secret</code>。</p>\n<p><img src=\"./assets/oauth-app-gitee-04.png\" alt=\"配置 OAuth App - Gitee 04\"></p>\n<h2 id=\"配置并启动你的-vssue\"> 配置并启动你的 Vssue</h2>\n<p>复制 <code>Client ID</code> 和 <code>Client Secret</code>, 并设置 <code>owner</code> 和 <code>repo</code>。</p>\n<blockquote>\n<p>Gitee repository 的 URL 模式为 <code>https://gitee.com/${owner}/${repo}</code></p>\n</blockquote>\n<p>这里我们以 <code>https://gitee.com/meteor_lxy/vssue-demo</code> 为例，并把 issue 的 <code>title</code> 设置为 <code>Vssue Demo</code>。</p>\n<p>然后运行 <code>anywhere -h localhost 8080</code>，在 <code>localhost:8080</code> 监听一个 http server 并返回 <code>index.html</code>。</p>\n<p><img src=\"./assets/oauth-app-gitee-05.png\" alt=\"配置 OAuth App - Gitee 05\"></p>\n<h2 id=\"在本地尝试-vssue\"> 在本地尝试 Vssue</h2>\n<p>Vssue 已经成功运行。点击 <code>Login</code> 使用 Gitee 帐号登录，并通过 <code>Click to create issue</code> 创建 Issue。</p>\n<p><img src=\"./assets/oauth-app-gitee-06.png\" alt=\"配置 OAuth App - Gitee 06\"></p>\n<p>重定向到 Gitee 授权页面。点击 <code>同意授权</code> 来登录。</p>\n<p><img src=\"./assets/oauth-app-gitee-07.png\" alt=\"配置 OAuth App - Gitee 07\"></p>\n<p>在当前页面写下评论吧 ~</p>\n<p><img src=\"./assets/oauth-app-gitee-08.png\" alt=\"配置 OAuth App - Gitee 08\"></p>\n<p><img src=\"./assets/oauth-app-gitee-09.png\" alt=\"配置 OAuth App - Gitee 09\"></p>\n<div><p>提示</p>\n<p>你可以前往 <a href=\"https://gitee.com/meteor_lxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteor_lxy/vssue-demo</a> 来获取 demo 代码。前往该仓库的 <a href=\"https://gitee.com/meteor_lxy/vssue-demo/issues/IWWTA\" target=\"_blank\" rel=\"noopener noreferrer\">第一个 issue</a> 看看发生了什么。</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "GitHub OAuth App",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/github/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/github/",
      "content_html": "<h1 id=\"github-oauth-app\"> GitHub OAuth App</h1>\n<blockquote>\n<p>Vssue 同样可以配合自己搭建的 GitHub Enterprise Server 使用。只需要将 <code>baseURL</code> 设置为你的 GitHub URL 即可。查看 <a href=\"./../options/#baseurl\">配置参考 - baseURL</a></p>\n<p>GitHub 需要设置 <code>clientSecret</code>，因为 <a href=\"https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub 目前还不支持 implicit grant type</a></p>\n<p><img src=\"./assets/oauth-app-github-00.png\" alt=\"Set up OAuth App - GitHub 00\"></p>\n</blockquote>\n<h2 id=\"创建一个新的-oauth-app\"> 创建一个新的 OAuth App</h2>\n<ul>\n<li>前往 <a href=\"https://github.com/settings/developers\" target=\"_blank\" rel=\"noopener noreferrer\">Settings - Developer Settings - OAuth Apps</a></li>\n<li>点击 <a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener noreferrer\">New OAuth App</a></li>\n</ul>\n<p><img src=\"./assets/oauth-app-github-01.png\" alt=\"配置 OAuth App - GitHub 01\">\n<img src=\"./assets/oauth-app-github-02.png\" alt=\"配置 OAuth App - GitHub 02\">\n<img src=\"./assets/oauth-app-github-03.png\" alt=\"配置 OAuth App - GitHub 03\"></p>\n<ul>\n<li>将 <code>Homepage URL</code> 和 <code>Authorization callback URL</code> 设置为你的网站 URL (这里我们用 <code>localhost:8080</code> 作为示例)</li>\n</ul>\n<p><img src=\"./assets/oauth-app-github-04.png\" alt=\"配置 OAuth App - GitHub 04\"></p>\n<h2 id=\"获取-client-id-和-secret\"> 获取 Client ID 和 Secret</h2>\n<p>现在你已经创建了一个新的 OAuth App，并得到了相应的 <code>Client ID</code> 和 <code>Client Secret</code>。</p>\n<p><img src=\"./assets/oauth-app-github-05.png\" alt=\"配置 OAuth App - GitHub 05\"></p>\n<h2 id=\"配置并启动你的-vssue\"> 配置并启动你的 Vssue</h2>\n<p>复制 <code>Client ID</code> 和 <code>Client Secret</code>, 并设置 <code>owner</code> 和 <code>repo</code>。</p>\n<blockquote>\n<p>GitHub repository 的 URL 模式为 <code>https://github.com/${owner}/${repo}</code></p>\n</blockquote>\n<p>这里我们以 <code>https://github.com/meteorlxy/vssue-demo</code> 为例，并把 issue 的 <code>title</code> 设置为 <code>Vssue Demo</code>。</p>\n<p>然后运行 <code>anywhere -h localhost 8080</code>，在 <code>localhost:8080</code> 监听一个 http server 并返回 <code>index.html</code>。</p>\n<p><img src=\"./assets/oauth-app-github-06.png\" alt=\"配置 OAuth App - GitHub 06\"></p>\n<h2 id=\"在本地尝试-vssue\"> 在本地尝试 Vssue</h2>\n<p>Vssue 已经成功运行。点击 <code>Login</code> 使用 GitHub 帐号登录。</p>\n<p><img src=\"./assets/oauth-app-github-07.png\" alt=\"配置 OAuth App - GitHub 07\"></p>\n<p>重定向到 GitHub 授权页面。点击 <code>Authorize ${你的帐号}</code> 来登录。</p>\n<p><img src=\"./assets/oauth-app-github-08.png\" alt=\"配置 OAuth App - GitHub 08\"></p>\n<p>在当前页面写下评论吧 ~</p>\n<p><img src=\"./assets/oauth-app-github-09.png\" alt=\"配置 OAuth App - GitHub 09\"></p>\n<p><img src=\"./assets/oauth-app-github-10.png\" alt=\"配置 OAuth App - GitHub 10\"></p>\n<div><p>Tips</p>\n<p>你可以前往 <a href=\"https://github.com/meteorlxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteorlxy/vssue-demo</a> 来获取 demo 代码。前往该仓库的 <a href=\"https://github.com/meteorlxy/vssue-demo/issues/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1 issue</a> 看看发生了什么。</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "GitLab Application",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/gitlab/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/gitlab/",
      "content_html": "<h1 id=\"gitlab-application\"> GitLab Application</h1>\n<blockquote>\n<p>查看 <a href=\"https://docs.gitlab.com/ce/integration/oauth_provider.html#adding-an-application-through-the-profile\" target=\"_blank\" rel=\"noopener noreferrer\">Gitlab 官方文档</a> 作为参考。\nVssue 同样可以配合自己搭建的 GitLab 使用。只需要将 <code>baseURL</code> 设置为你的 Gitlab URL 即可。查看 <a href=\"./../options/#baseurl\">配置参考 - baseURL</a></p>\n</blockquote>\n<h2 id=\"创建一个新的-application\"> 创建一个新的 Application</h2>\n<ul>\n<li>前往 <a href=\"https://gitlab.com/profile/applications\" target=\"_blank\" rel=\"noopener noreferrer\">Settings - Applications</a></li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitlab-01.png\" alt=\"配置 OAuth App - Gitlab 01\">\n<img src=\"./assets/oauth-app-gitlab-02.png\" alt=\"配置 OAuth App - Gitlab 02\"></p>\n<ul>\n<li>将 <code>Redirect URI</code> 设置为你的网站 URL (这里我们用 <code>localhost:8080</code> 作为示例)</li>\n<li>勾选 <code>api</code> scope</li>\n</ul>\n<p><img src=\"./assets/oauth-app-gitlab-03.png\" alt=\"配置 OAuth App - Gitlab 03\"></p>\n<h2 id=\"获取-client-id\"> 获取 Client ID</h2>\n<p>现在你已经创建了一个新的 Application，并得到了相应的 <strong>Application ID</strong> (<code>Client ID</code>)。</p>\n<p><img src=\"./assets/oauth-app-gitlab-04.png\" alt=\"配置 OAuth App - Gitlab 04\"></p>\n<h2 id=\"配置并启动你的-vssue\"> 配置并启动你的 Vssue</h2>\n<p>复制 <code>Client ID</code>，并设置 <code>owner</code> 和 <code>repo</code>。</p>\n<blockquote>\n<p>Gitlab repository 的 URL 模式为 <code>https://gitlab.com/${owner}/${repo}</code></p>\n</blockquote>\n<p>这里我们以 <code>https://gitlab.com/meteorlxy/vssue-demo</code> 为例，并把 issue 的 <code>title</code> 设置为 <code>Vssue Demo</code>。</p>\n<p>然后运行 <code>anywhere -h localhost 8080</code>，在 <code>localhost:8080</code> 监听一个 http server 并返回 <code>index.html</code>。</p>\n<p><img src=\"./assets/oauth-app-gitlab-05.png\" alt=\"配置 OAuth App - Gitlab 05\"></p>\n<h2 id=\"在本地尝试-vssue\"> 在本地尝试 Vssue</h2>\n<p>Vssue 已经成功运行。点击 <code>Login</code> 使用 Gitlab 帐号登录。</p>\n<p><img src=\"./assets/oauth-app-gitlab-06.png\" alt=\"配置 OAuth App - Gitlab 06\"></p>\n<p>重定向到 Gitlab 授权页面。点击 <code>Authorize</code> 来登录。</p>\n<p><img src=\"./assets/oauth-app-gitlab-07.png\" alt=\"配置 OAuth App - Gitlab 07\"></p>\n<p>在当前页面写下评论吧 ~</p>\n<p><img src=\"./assets/oauth-app-gitlab-08.png\" alt=\"配置 OAuth App - Gitlab 08\">\n<img src=\"./assets/oauth-app-gitlab-09.png\" alt=\"配置 OAuth App - Gitlab 09\"></p>\n<div><p>Tips</p>\n<p>你可以前往 <a href=\"https://gitlab.com/meteorlxy/vssue-demo\" target=\"_blank\" rel=\"noopener noreferrer\">meteorlxy/vssue-demo</a> 来获取 demo 代码。前往该仓库的 <a href=\"https://gitlab.com/meteorlxy/vssue-demo/issues/1\" target=\"_blank\" rel=\"noopener noreferrer\">#1 issue</a> 看看发生了什么。</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "页面信息",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/page-info/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/page-info/",
      "content_html": "<p><code>&lt;PageInfo /&gt;</code> 组件默认全局启用。你可以在特定页面的 <code>Front Matter</code> 中设置 <code>pageInfo: false</code> 来局部禁用它。</p>\n<p>如果你需要保持全局禁用，请在插件选项中设置 <code>pageInfo</code> 为 <code>false</code>。这样你可以在特定页面的 <code>Front Matter</code> 中设置 <code>pageInfo</code> 来局部启用它。</p>\n<h2 id=\"参数\"> 参数</h2>\n<p><code>pageInfo</code> 默认接受一个字符串数组，可以填入各条目名称，填入的顺序即是各条目显示的顺序。</p>\n<p>条目可选的值和对应内容如下:</p>\n<table>\n<thead>\n<tr>\n<th>条目</th>\n<th>对应内容</th>\n<th>页面 frontmatter 值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>'Author'</code></td>\n<td>作者</td>\n<td>author</td>\n</tr>\n<tr>\n<td><code>'Time'</code></td>\n<td>写作日期</td>\n<td>time</td>\n</tr>\n<tr>\n<td><code>'Category'</code></td>\n<td>分类</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>'Tag'</code></td>\n<td>标签</td>\n<td>tags</td>\n</tr>\n<tr>\n<td><code>'ReadTime'</code></td>\n<td>预计阅读时间</td>\n<td>N/A(自动生成)</td>\n</tr>\n<tr>\n<td><code>'Word'</code></td>\n<td>字数</td>\n<td>N/A(自动生成)</td>\n</tr>\n<tr>\n<td><code>'Visitor'</code></td>\n<td>访问量</td>\n<td>visitor(仅 Valine 可用)</td>\n</tr>\n</tbody>\n</table>\n<p>默认会显示 “作者，访问量，写作日期，分类，标签，预计阅读时间”。</p>\n<div><p>其他说明</p>\n<ul>\n<li><strong>author</strong></li>\n</ul>\n<p>你可以在插件选项中配置 <code>author</code> 来设置默认作者，同样，你仍可以在页面中配置 <code>Front Matter</code> 中的 <code>author</code> 为一个新值来覆盖默认作者，或者设置为 <code>false</code> 以取消该页面的作者显示。</p>\n<ul>\n<li><strong>time</strong></li>\n</ul>\n<p>建议 time 以标准格式输入日期，即 <code>xxxx-xx-xx</code> 的形式，如 “2020 年 4 月 1 日” 应当输入为 <code>2020-04-01</code></p>\n<ul>\n<li><strong>阅读时间</strong></li>\n</ul>\n<p>默认的统计方式是一分钟 300 字，你可以在插件配置中设置 <code>wordPerminute</code> 来覆盖它，该选项不支持在页面单独配置。</p>\n</div>\n<h2 id=\"原创标识\"> 原创标识</h2>\n<p>你可以在特定页面的 frontmatter 中设置 <code>original</code> 为 <code>true</code> 来为你的文章添加原创标签。</p>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "指南",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/",
      "content_html": "<p>此插件暴露两个组件，路径为 <code>@mr-hope/vuepress-plugin-comment/&lt;组件名&gt;.vue</code>。请在你的主题中手动引入。</p>\n<ul>\n<li><code>&lt;Comment /&gt;</code>: 评论组件</li>\n<li><code>&lt;PageInfo /&gt;</code>: 页面信息组件</li>\n</ul>\n<h2 id=\"pageinfo\"> <code>&lt;PageInfo /&gt;</code></h2>\n<p>你需要将页面信息组件 (<code>&lt;PageInfo /&gt;</code>) 插入在 <code>&lt;Content /&gt;</code> 组件前。</p>\n<ul>\n<li><a href=\"./page-info.html\">查看详情</a></li>\n</ul>\n<h2 id=\"comment\"> <code>&lt;Comment /&gt;</code></h2>\n<p>推荐将评论组件 (<code>&lt;Comment /&gt;</code>) 插入在 <code>&lt;PageNav /&gt;</code> 组件后。</p>\n<p><code>&lt;Comment /&gt;</code> 组件默认全局启用。你可以在特定页面的 <code>Front Matter</code> 中设置 <code>comment: false</code> 来局部禁用它。</p>\n<p>如果你需要保持全局禁用，请在插件选项中设置 <code>comment</code> 为 <code>false</code>。这样你可以在特定页面的 <code>Front Matter</code> 中设置 <code>comment: true</code> 来局部启用它。</p>\n<p>有两个评论插件可以选择: Valine 和 Vssue。</p>\n<h3 id=\"valine\"> Valine</h3>\n<p><a href=\"./valine.html\">详见 Valine 指南</a></p>\n<h3 id=\"vssue\"> Vssue</h3>\n<p><a href=\"./vssue.html\">详见 Vssue 指南</a></p>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "支持的代码托管平台",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/supported-platforms/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/supported-platforms/",
      "content_html": "<h1 id=\"支持的代码托管平台\"> 支持的代码托管平台</h1>\n<h2 id=\"github\"> GitHub</h2>\n<p>指南: <a href=\"./github.html\">创建 GitHub OAuth App</a></p>\n<h3 id=\"github-rest-api-v3\"> GitHub REST API V3</h3>\n<ul>\n<li>Vssue API 包: <a href=\"https://www.npmjs.com/package/@vssue/api-github-v3\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-github-v3</a></li>\n<li>特点 / 缺点:\n<ul>\n<li>需要设置 <a href=\"./../options/#clientsecret\">clientSecret</a></li>\n<li>评论无法排序</li>\n<li>评论可以编辑</li>\n<li>评论可以删除</li>\n<li>可以不登录浏览评论，但 API 有调用频率限制</li>\n</ul>\n</li>\n<li>开发者参考: <a href=\"https://developer.github.com/v3\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档</a></li>\n</ul>\n<h3 id=\"github-graphql-api-v4\"> GitHub GraphQL API V4</h3>\n<ul>\n<li>Vssue API 包: <a href=\"https://www.npmjs.com/package/@vssue/api-github-v4\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-github-v4</a></li>\n<li>特点 / 缺点:\n<ul>\n<li>需要设置 <a href=\"./../options/#clientsecret\">clientSecret</a></li>\n<li>评论可以排序</li>\n<li>评论可以编辑</li>\n<li>评论可以删除</li>\n<li>要求登陆后才能浏览评论</li>\n</ul>\n</li>\n<li>开发者参考: <a href=\"https://developer.github.com/v4\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档</a></li>\n</ul>\n<h2 id=\"gitlab\"> GitLab</h2>\n<p>指南: <a href=\"./gitlab.html\">创建 GitLab Application</a></p>\n<h3 id=\"gitlab-api-v4-gitlab-v11-0\"> Gitlab API V4 (Gitlab v11.0+)</h3>\n<ul>\n<li>Vssue API 包: <a href=\"https://www.npmjs.com/package/@vssue/api-gitlab-v4\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-gitlab-v4</a></li>\n<li>特点 / 缺点:\n<ul>\n<li>评论可以排序</li>\n<li>评论可以编辑</li>\n<li>评论可以删除</li>\n<li>要求登陆后才能浏览评论</li>\n</ul>\n</li>\n<li>开发者参考: <a href=\"https://docs.gitlab.com/ce/api\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档</a></li>\n</ul>\n<h2 id=\"bitbucket\"> Bitbucket</h2>\n<p>指南: <a href=\"./bitbucket.html\">创建 Bitbucket OAuth Consumer</a></p>\n<h3 id=\"bitbucket-api-v2\"> Bitbucket API V2</h3>\n<ul>\n<li>Vssue API 包 <a href=\"https://www.npmjs.com/package/@vssue/api-bitbucket-v2\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-bitbucket-v2</a></li>\n<li>特点 / 缺点:\n<ul>\n<li>评论可以排序</li>\n<li>评论可以编辑</li>\n<li>评论可以删除</li>\n<li>可以不登录浏览评论</li>\n<li>不能对评论做出 emoji 响应 (喜欢、点赞、踩 等)</li>\n</ul>\n</li>\n<li>开发者参考: <a href=\"https://developer.atlassian.com/bitbucket/api/2/reference\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档</a></li>\n</ul>\n<h2 id=\"gitee\"> Gitee</h2>\n<p>指南: <a href=\"./gitee.html\">创建 Gitee 第三方应用</a></p>\n<h3 id=\"gitee-api-v5\"> Gitee API V5</h3>\n<ul>\n<li>Vssue API 包: <a href=\"https://www.npmjs.com/package/@vssue/api-gitee-v5\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/api-gitee-v5</a></li>\n<li>特点 / 缺点:\n<ul>\n<li>需要设置 <a href=\"./../options/#clientsecret\">clientSecret</a></li>\n<li>评论无法排序</li>\n<li>评论可以编辑</li>\n<li>评论可以删除</li>\n<li>可以不登录浏览评论，但 API 有调用频率限制</li>\n<li>不能对评论做出 emoji 响应 (喜欢、点赞、踩 等)</li>\n</ul>\n</li>\n<li>开发者参考: <a href=\"https://gitee.com/api/v5/swagger\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档</a></li>\n</ul>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "Valine",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/valine/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/valine/",
      "content_html": "<h1 id=\"valine\"> Valine</h1>\n<p>借助 Valine，插件实现了无后端开启阅读量展示与评论功能。</p>\n<h2 id=\"获取-app-id-和-app-key\"> 获取 APP ID 和 APP Key</h2>\n<p>请先 <a href=\"https://leancloud.cn/dashboard/login.html#/signin\" target=\"_blank\" rel=\"noopener noreferrer\">登录</a> 或 <a href=\"https://leancloud.cn/dashboard/login.html#/signup\" target=\"_blank\" rel=\"noopener noreferrer\">注册</a> LeanCloud, 进入控制台后点击左下角创建应用。</p>\n<p>应用创建好以后，进入刚刚创建的应用，选择左下角的 <code>设置 &gt; 应用 Key</code>，然后就能看到你的 <code>APP ID</code> 和 <code>APP Key</code> 了。</p>\n<div><pre><code>options <span>=</span> <span>{</span>\n  type<span>:</span> <span>\"valine\"</span><span>,</span>\n  appId<span>:</span> <span>\"...\"</span><span>,</span> <span>// your appId</span>\n  appKey<span>:</span> <span>\"...\"</span><span>,</span> <span>// your appKey</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>将对应的 <code>APP ID</code> 和 <code>APP Key</code> 填入， Valine 即配置完成。</p>\n<p>Valine 评论的其他配置将在 <a href=\"./../config/valine.html\">配置</a> 中列出。</p>\n<div><p>Tips</p>\n<p>更多配置与使用，请见 <a href=\"https://valine.js.org\" target=\"_blank\" rel=\"noopener noreferrer\">Valine 官方文档</a>。</p>\n</div>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "使用 Vssue",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/guide/vssue/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/guide/vssue/",
      "content_html": "<h1 id=\"使用-vssue\"> 使用 Vssue</h1>\n<h2 id=\"选择你要使用的代码托管平台\"> 选择你要使用的代码托管平台</h2>\n<p>Vssue 支持通过 GitHub, Gitlab, Bitbucket 或者 Gitee 的 Issue 系统来为你的静态页面提供评论功能，你可以选择其中之一来使用。</p>\n<p>前往 <a href=\"./supported-platforms.html\">支持的代码托管平台 - 创建 OAuth App</a> 查看详细指引。</p>\n<p>完成这一步之后，你将会配置好一个 OAuth App，并得到对应的 <code>client id</code> 和 <code>client secret</code>，它们将会用于 Vssue 的使用。</p>\n<ul>\n<li><code>owner</code>: 对应 repository 的拥有者帐号或者团队</li>\n<li><code>repo</code>: 用来存储评论的 repository</li>\n<li><code>clientId</code>: OAuth App 的 <code>client id</code></li>\n<li><code>clientSecret</code>: OAuth App 的 <code>client secret</code> (只有在使用某些平台时需要)</li>\n</ul>\n<h2 id=\"vssue-配置\"> Vssue 配置</h2>\n<p>本插件通过 Vssue 提供的 <a href=\"https://www.npmjs.com/package/@vssue/vuepress-plugin-vssue\" target=\"_blank\" rel=\"noopener noreferrer\">@vssue/vuepress-plugin-vssue</a> 来帮助你在 VuePress 中快速使用 Vssue。</p>\n<h3 id=\"使用插件\"> 使用插件</h3>\n<div><pre><code><span>// .vuepress/config.js</span>\n\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  plugins<span>:</span> <span>{</span>\n    <span>\"@mr-hope/comment\"</span><span>:</span> <span>{</span>\n      type<span>:</span> <span>\"vssue\"</span><span>,</span>\n      <span>// 设置 `platform` 而不是 `api`</span>\n      platform<span>:</span> <span>\"github\"</span><span>,</span>\n\n      <span>// 其他的 Vssue 配置</span>\n      owner<span>:</span> <span>\"OWNER_OF_REPO\"</span><span>,</span>\n      repo<span>:</span> <span>\"NAME_OF_REPO\"</span><span>,</span>\n      clientId<span>:</span> <span>\"YOUR_CLIENT_ID\"</span><span>,</span>\n      clientSecret<span>:</span> <span>\"YOUR_CLIENT_SECRET\"</span><span>,</span>\n    <span>}</span><span>,</span>\n  <span>}</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><div><p>Tips</p>\n<p>唯一的区别在于，你需要设置 <code>platform</code> 而不是对应的 <code>api</code> 包。</p>\n<p><code>@vssue/vuepress-plugin-vssue</code> 会自动根据你设置的 <code>platform</code> 为你解析对应的 API 包:</p>\n<ul>\n<li>Platform <code>github</code> - API 包 <code>@vssue/api-github-v3</code></li>\n<li>Platform <code>github-v4</code> - API 包 <code>@vssue/api-github-v4</code></li>\n<li>Platform <code>gitlab</code> - API 包 <code>@vssue/api-gitlab-v4</code></li>\n<li>Platform <code>bitbucket</code> - API 包 <code>@vssue/api-bitbucket-v2</code></li>\n<li>Platform <code>gitee</code> - API 包 <code>@vssue/api-gitee-v5</code></li>\n</ul>\n</div>\n<h3 id=\"使用-vssue-组件\"> 使用 Vssue 组件</h3>\n<p><code>Vssue</code> 已经注册为 Vue 组件，你可以在你的 VuePress Markdown 文件中直接使用它。</p>\n<div><pre><code><span>&lt;!-- README.md --></span>\n\n<span><span>#</span> Vssue Demo</span>\n\n<span><span><span>&lt;</span>Vssue</span> <span>title</span><span><span>=</span><span>\"</span>Vssue Demo<span>\"</span></span> <span>/></span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id=\"自定义样式变量\"> 自定义样式变量</h3>\n<p>通过 VuePress 的 <a href=\"https://vuepress.vuejs.org/zh/config/#palette-styl\" target=\"_blank\" rel=\"noopener noreferrer\">palette.styl</a>，你可以很轻松地修改 Vssue 的样式变量。</p>\n<p>Vssue 样式中预定义了一些 <a href=\"http://stylus-lang.com/docs/variables.html\" target=\"_blank\" rel=\"noopener noreferrer\">Stylus 变量</a>，你可以在 <code>vssue/src/styles/_variables.styl</code> 中查看它们:</p>\n<div><pre><code><span>// 主题颜色</span>\n$vssue-theme-color\n\n<span>// 文字颜色  (用于普通文字)</span>\n$vssue-text-color\n\n<span>// 浅色文字颜色  (用于备注等文字)</span>\n$vssue-text-light-color\n\n<span>// 边框颜色</span>\n$vssue-border-color\n\n<span>// 进度条颜色</span>\n$vssue-progress-color\n\n<span>// 文字大小</span>\n$vssue-font-size\n\n<span>// 字体</span>\n$vssue-font-family\n\n<span>// 切换为移动端模式的屏幕宽度</span>\n$vssue-breakpoint-mobile\n\n<span>// 文字方向 (ltr / rtl)  (为 RTL 语言使用，如希伯来语等)</span>\n$vssue-direction\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><p>举例来说，Vssue 默认使用一个“Vue 绿色” (<code>#3eaf7c</code>) 作为主题颜色，并将其设置为 <code>$vssue-theme-color</code> 的默认值。你可以在引入 <code>vssue/src/styles/index.styl</code> 之前设置 <code>$vssue-theme-color</code> 的值来改变主题颜色。</p>\n<p>默认情况下，下面这些 Vssue 的样式变量与 VuePress 的样式变量相等:</p>\n<div><pre><code><span>// @vssue/vuepress-plugin-vssue/styles/index.styl</span>\n\n<span><span>$vssue-theme-color</span> <span>?=</span> $accentColor</span>\n<span><span>$vssue-text-color</span> <span>?=</span> $textColor</span>\n<span><span>$vssue-border-color</span> <span>?=</span> $borderColor</span>\n<span><span>$vssue-breakpoint-mobile</span> <span>?=</span> $MQMobile</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>如果你想要覆盖它们，在你的 <code>palette.styl</code> 中设置即可:</p>\n<div><pre><code><span>// .vuepress/styles/palette.styl</span>\n\n<span><span>$accentColor</span> <span>=</span> <span>blue</span></span>\n\n<span><span>$vssue-theme-color</span> <span>=</span> <span>red</span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id=\"不想使用-vssue-插件\"> 不想使用 Vssue 插件</h2>\n<p>Vssue 是适配 SSR 的，所以你可以不使用 <code>@vssue/vuepress-plugin-vssue</code>，而是像其他 Vue 插件 / 组件一样，在 VuePress 中直接引入 Vssue (尤其是在你对 Vssue 的样式进行了自定义的时候) 。</p>\n<p>但是我们仍然建议你在 VuePress 中通过 <code>@vssue/vuepress-plugin-vssue</code> 来使用 Vssue，该插件已经帮助你仅在客户端加载 Vssue 来避免一些潜在的问题。</p>\n<p>如果你不想使用我们提供的插件，你可能需要将 <code>&lt;Vssue&gt;</code> 组件放置在 <code>&lt;ClientOnly&gt;</code> 组件中来避免这些潜在的问题，即:</p>\n<div><pre><code><span><span><span>&lt;</span>ClientOnly</span><span>></span></span>\n  <span><span><span>&lt;</span>Vssue</span> <span>/></span></span>\n<span><span><span>&lt;/</span>ClientOnly</span><span>></span></span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><blockquote>\n<p>参考 VuePress <a href=\"https://vuepress.vuejs.org/zh/guide/using-vue.html#clientonly\" target=\"_blank\" rel=\"noopener noreferrer\">内置的组件 - ClientOnly</a></p>\n</blockquote>\n",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    },
    {
      "title": "主页",
      "url": "https://vuepress-theme-hope.github.io/comment/zh/",
      "id": "https://vuepress-theme-hope.github.io/comment/zh/",
      "content_html": "<h2 id=\"安装\"> 安装</h2>\n<CodeGroup>\n<CodeGroupItem title=\"yarn\">\n<div><pre><code><span>yarn</span> <span>add</span> -D @mr-hope/vuepress-plugin-comment\n</code></pre>\n<div><span>1</span><br></div></div></CodeGroupItem>\n<CodeGroupItem title=\"npm\">\n<div><pre><code><span>npm</span> i -D @mr-hope/vuepress-plugin-comment\n</code></pre>\n<div><span>1</span><br></div></div></CodeGroupItem>\n</CodeGroup>\n<h2 id=\"使用\"> 使用</h2>\n<div><pre><code><span>// .vuepress/config.js</span>\nmodule<span>.</span>exports <span>=</span> <span>{</span>\n  plugins<span>:</span> <span>[</span>\n    <span>[</span>\n      <span>\"@mr-hope/comment\"</span><span>,</span>\n      <span>{</span>\n        <span>// 配置选项</span>\n      <span>}</span><span>,</span>\n    <span>]</span><span>,</span>\n  <span>]</span><span>,</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>",
      "date_modified": "2021-02-26T13:04:29.000Z",
      "authors": [
        {
          "name": "Mr.Hope"
        }
      ],
      "tags": []
    }
  ]
}